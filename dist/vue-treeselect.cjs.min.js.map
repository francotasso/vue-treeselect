{"version":3,"sources":["webpack://VueTreeselect/webpack/bootstrap","webpack://VueTreeselect/external \"@babel/runtime/helpers/defineProperty\"","webpack://VueTreeselect/external \"babel-helper-vue-jsx-merge-props\"","webpack://VueTreeselect/external \"@babel/runtime/helpers/toConsumableArray\"","webpack://VueTreeselect/external \"lodash/noop\"","webpack://VueTreeselect/external \"lodash/debounce\"","webpack://VueTreeselect/external \"is-promise\"","webpack://VueTreeselect/external \"lodash/once\"","webpack://VueTreeselect/external \"lodash/identity\"","webpack://VueTreeselect/external \"lodash/constant\"","webpack://VueTreeselect/external \"lodash/last\"","webpack://VueTreeselect/external \"@babel/runtime/helpers/slicedToArray\"","webpack://VueTreeselect/external \"watch-size\"","webpack://VueTreeselect/external \"@babel/runtime/helpers/typeof\"","webpack://VueTreeselect/external \"fuzzysearch\"","webpack://VueTreeselect/external \"vue\"","webpack://VueTreeselect/./src/utils/warning.js","webpack://VueTreeselect/./src/utils/onLeftClick.js","webpack://VueTreeselect/./src/utils/scrollIntoView.js","webpack://VueTreeselect/./src/utils/watchSize.js","webpack://VueTreeselect/./src/utils/removeFromArray.js","webpack://VueTreeselect/./src/utils/setupResizeAndScrollEventListeners.js","webpack://VueTreeselect/./src/utils/isNaN.js","webpack://VueTreeselect/./src/utils/createMap.js","webpack://VueTreeselect/./src/utils/deepExtend.js","webpack://VueTreeselect/./src/utils/includes.js","webpack://VueTreeselect/./src/utils/find.js","webpack://VueTreeselect/./src/utils/quickDiff.js","webpack://VueTreeselect/./src/constants.js","webpack://VueTreeselect/./src/mixins/treeselectMixin.js","webpack://VueTreeselect/src/components/HiddenFields.vue","webpack://VueTreeselect/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://VueTreeselect/./src/components/HiddenFields.vue","webpack://VueTreeselect/src/components/Input.vue","webpack://VueTreeselect/./src/components/Input.vue","webpack://VueTreeselect/./src/components/Placeholder.vue","webpack://VueTreeselect/src/components/Placeholder.vue","webpack://VueTreeselect/./src/components/SingleValue.vue","webpack://VueTreeselect/src/components/SingleValue.vue","webpack://VueTreeselect/./src/components/icons/Delete.vue?2d39","webpack://VueTreeselect/src/components/icons/Delete.vue","webpack://VueTreeselect/./src/components/icons/Delete.vue","webpack://VueTreeselect/./src/components/MultiValueItem.vue","webpack://VueTreeselect/src/components/MultiValueItem.vue","webpack://VueTreeselect/./src/components/MultiValue.vue","webpack://VueTreeselect/src/components/MultiValue.vue","webpack://VueTreeselect/./src/components/icons/Arrow.vue?2ad4","webpack://VueTreeselect/src/components/icons/Arrow.vue","webpack://VueTreeselect/./src/components/icons/Arrow.vue","webpack://VueTreeselect/./src/components/Control.vue","webpack://VueTreeselect/src/components/Control.vue","webpack://VueTreeselect/./src/components/Tip.vue","webpack://VueTreeselect/src/components/Tip.vue","webpack://VueTreeselect/src/components/Option.vue","webpack://VueTreeselect/./src/components/Option.vue","webpack://VueTreeselect/src/components/Menu.vue","webpack://VueTreeselect/./src/components/Menu.vue","webpack://VueTreeselect/src/components/MenuPortal.vue","webpack://VueTreeselect/./src/components/MenuPortal.vue","webpack://VueTreeselect/./src/components/Treeselect.vue","webpack://VueTreeselect/src/components/Treeselect.vue","webpack://VueTreeselect/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","warning","noop","onLeftClick","mouseDownHandler","evt","type","button","args","this","scrollIntoView","$scrollingEl","$focusedEl","scrollingReact","getBoundingClientRect","focusedRect","overScroll","offsetHeight","bottom","scrollTop","Math","min","offsetTop","clientHeight","scrollHeight","top","max","intervalId","removeFromArray","arr","elem","idx","indexOf","splice","registered","test","item","$el","listener","lastWidth","lastHeight","width","offsetWidth","height","watchSizeForIE9","push","setInterval","forEach","length","clearInterval","watchSize","isIE9","document","documentMode","locked","removeSizeWatcher","watchSizeForBrowsersOtherThanIE9","isScrollElment","getComputedStyle","overflow","overflowX","overflowY","setupResizeAndScrollEventListeners","$scrollParents","$parent","parentNode","nodeName","nodeType","ELEMENT_NODE","window","findScrollParents","addEventListener","passive","scrollParent","removeEventListener","$scrollParent","isNaN","x","createMap","isPlainObject","getPrototypeOf","deepExtend","target","source","keys","len","obj","includes","arrOrStr","find","predicate","ctx","quickDiff","arrA","arrB","LOAD_ROOT_OPTIONS","LOAD_CHILDREN_OPTIONS","ASYNC_SEARCH","KEY_CODES","sortValueByIndex","a","b","level","index","slugify","str","map","e","u","pattern","toLowerCase","replace","RegExp","match","enableFuzzyMatch","replaceAccents","needle","haystack","fuzzysearch","getErrorMessage","err","message","String","instanceId","provide","instance","props","allowClearingDisabled","Boolean","default","allowSelectingDisabledDescendants","alwaysOpen","appendToBody","async","autoFocus","autoLoadRootOptions","autoDeselectAncestors","autoDeselectDescendants","autoSelectAncestors","autoSelectDescendants","backspaceRemoves","beforeClearAll","Function","constant","branchNodesFirst","cacheOptions","clearable","clearAllText","clearOnSelect","clearValueText","closeOnSelect","defaultExpandLevel","Number","defaultOptions","deleteRemoves","delimiter","flattenSearchResults","disableBranchNodes","disabled","disableFuzzyMatching","flat","joinValues","limit","Infinity","limitText","count","loadingText","loadOptions","matchKeys","Array","maxHeight","multiple","noChildrenText","noOptionsText","noResultsText","normalizer","identity","openDirection","validator","openOnClick","openOnFocus","options","placeholder","required","retryText","retryTitle","searchable","searchNested","searchPromptText","showCount","showCountOf","showCountOnSearch","sortValueBy","tabIndex","valueConsistsOf","valueFormat","zIndex","inputDebounceDelay","activeDebInputChange","data","trigger","isFocused","searchQuery","auxSearchQuery","menu","isOpen","current","lastScrollPosition","placement","forest","normalizedOptions","nodeMap","checkedStateMap","selectedNodeIds","extractCheckedNodeIdsFromValue","selectedNodeMap","rootOptionsStates","isLoaded","isLoading","loadingError","localSearch","active","noResults","countMap","remoteSearch","debounceQuery","debounce","val","$emit","computed","selectedNodes","getNode","internalValue","single","slice","filter","id","node","isRootNode","isSelected","isLeaf","children","indeterminateNodeIds","selectedNode","ancestors","ancestor","sort","sortValueByLevel","hasValue","visibleOptionIds","traverseAllNodesByIndex","shouldOptionBeIncludedInSearchResult","isBranch","shouldExpand","hasVisibleOptions","showCountOnSearchComputed","hasBranchNodes","some","rootNode","shouldFlattenOptions","watch","newValue","openMenu","closeMenu","initialize","oldValue","getValue","getInstanceId","buildForestState","handler","isArray","deep","immediate","handleRemoteSearch","handleLocalSearch","nodeIdsFromValue","fixSelectedNodeIds","methods","verifyProps","propName","resetFlags","_blurOnSelect","getRemoteSearchEntry","prevNodeMap","keepDataOfSelectedNodes","normalize","rawNodes","raw","nodeId","createFallbackNode","extractNodeFromValue","fallbackNode","label","enhancedNormalizer","isFallbackNode","isDisabled","isNew","$set","defaultNode","nodeIdListOfPrevValue","nextSelectedNodeIds","traverseDescendantsBFS","descendant","queue","shift","callback","currNode","traverseDescendantsDFS","child","traverseAllNodesDFS","walk","toggleClickOutsideEvent","enabled","handleClickOutside","getValueContainer","$refs","control","getInput","input","focusInput","focus","blurInput","blur","handleMouseDown","preventDefault","stopPropagation","contains","wrapper","done","resetHighlightedOptionWhenNecessary","isExpandedOnSearch","showAllChildrenOnSearch","isMatched","hasMatchedDescendants","lowerCasedSearchQuery","trim","toLocaleLowerCase","splitSearchQuery","split","every","filterValue","nestedSearchLabel","matchKey","lowerCased","entry","callLoadOptionsProp","action","isPending","start","succeed","fail","end","$watch","isExpanded","shouldShowOptionInMenu","getControl","getMenu","$menu","portal","portalTarget","setCurrentHighlightedOption","scroll","prev","isHighlighted","scrollToOption","$option","querySelector","$nextTick","forceReset","highlightFirstOption","first","highlightPrevOption","highlightLastOption","highlightNextOption","next","last","getLast","resetSearchQuery","saveMenuScrollPosition","restoreMenuScrollPosition","loadRootOptions","toggleMenu","toggleExpanded","nextState","childrenStates","loadChildrenOptions","selectedNodeId","ancestorNode","nodes","checkDuplication","verifyNodeShape","isDefaultExpanded","reduce","normalized","concat","hasDisabledDescendants","branchNodes","option","leafNodes","once","result","isPromise","then","catch","console","error","JSON","stringify","undefined","select","clear","_selectNode","_deselectNode","addValue","isFullyChecked","curr","removeValue","hasUncheckedSomeDescendants","removeLastValue","lastValue","lastSelectedNode","created","mounted","destroyed","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","component","__file","inject","needAutoSize","inputStyle","updateInputWidth","debouncedCallback","onInput","onFocus","onBlur","activeElement","cancel","updateSearchQuery","onKeyDown","ctrlKey","shiftKey","altKey","metaKey","onMouseDown","renderInputContainer","renderInput","renderSizer","on","keydown","ref","attrs","autocomplete","inputWidth","_h","$createElement","_c","_self","xmlns","viewBox","_withStripped","VERSION","Treeselect","PKG_VERSION"],"mappings":"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","file":"vue-treeselect.cjs.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"babel-helper-vue-jsx-merge-props\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"lodash/noop\");","module.exports = require(\"lodash/debounce\");","module.exports = require(\"is-promise\");","module.exports = require(\"lodash/once\");","module.exports = require(\"lodash/identity\");","module.exports = require(\"lodash/constant\");","module.exports = require(\"lodash/last\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"watch-size\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"fuzzysearch\");","module.exports = require(\"vue\");","import { noop } from './noop'\r\n\r\nexport const warning = process.env.NODE_ENV === 'production'\r\n  ? /* istanbul ignore next */ noop\r\n  : function warning(checker, complainer) {\r\n    if (!checker()) {\r\n      const message = [ '[Vue-Treeselect Warning]' ].concat(complainer())\r\n      // eslint-disable-next-line no-console\r\n      console.error(...message)\r\n    }\r\n  }\r\n","export function onLeftClick(mouseDownHandler) {\r\n  return function onMouseDown(evt, ...args) {\r\n    if (evt.type === 'mousedown' && evt.button === 0) {\r\n      mouseDownHandler.call(this, evt, ...args)\r\n    }\r\n  }\r\n}\r\n","// from react-select\r\nexport function scrollIntoView($scrollingEl, $focusedEl) {\r\n  const scrollingReact = $scrollingEl.getBoundingClientRect()\r\n  const focusedRect = $focusedEl.getBoundingClientRect()\r\n  const overScroll = $focusedEl.offsetHeight / 3\r\n\r\n  if (focusedRect.bottom + overScroll > scrollingReact.bottom) {\r\n    $scrollingEl.scrollTop = Math.min(\r\n      $focusedEl.offsetTop + $focusedEl.clientHeight - $scrollingEl.offsetHeight + overScroll,\r\n      $scrollingEl.scrollHeight,\r\n    )\r\n  } else if (focusedRect.top - overScroll < scrollingReact.top) {\r\n    $scrollingEl.scrollTop = Math.max($focusedEl.offsetTop - overScroll, 0)\r\n  }\r\n}\r\n","import watchSizeForBrowsersOtherThanIE9 from 'watch-size'\r\nimport { removeFromArray } from './removeFromArray'\r\n\r\nlet intervalId\r\nconst registered = []\r\nconst INTERVAL_DURATION = 100\r\n\r\nfunction run() {\r\n  intervalId = setInterval(() => {\r\n    registered.forEach(test)\r\n  }, INTERVAL_DURATION)\r\n}\r\n\r\nfunction stop() {\r\n  clearInterval(intervalId)\r\n  intervalId = null\r\n}\r\n\r\nfunction test(item) {\r\n  const { $el, listener, lastWidth, lastHeight } = item\r\n  const width = $el.offsetWidth\r\n  const height = $el.offsetHeight\r\n\r\n  if (lastWidth !== width || lastHeight !== height) {\r\n    item.lastWidth = width\r\n    item.lastHeight = height\r\n\r\n    listener({ width, height })\r\n  }\r\n}\r\n\r\nfunction watchSizeForIE9($el, listener) {\r\n  const item = {\r\n    $el,\r\n    listener,\r\n    lastWidth: null,\r\n    lastHeight: null,\r\n  }\r\n  const unwatch = () => {\r\n    removeFromArray(registered, item)\r\n    if (!registered.length) stop()\r\n  }\r\n\r\n  registered.push(item)\r\n  // The original watch-size will call the listener on initialization.\r\n  // Keep the same behavior here.\r\n  test(item)\r\n  run()\r\n\r\n  return unwatch\r\n}\r\n\r\nexport function watchSize($el, listener) {\r\n  // See: https://stackoverflow.com/a/31293352\r\n  const isIE9 = document.documentMode === 9\r\n  // watch-size will call the listener on initialization.\r\n  // Disable this behavior with a lock to achieve a clearer code logic.\r\n  let locked = true\r\n  const wrappedListener = (...args) => locked || listener(...args)\r\n  const implementation = isIE9\r\n    ? watchSizeForIE9\r\n    : watchSizeForBrowsersOtherThanIE9\r\n  const removeSizeWatcher = implementation($el, wrappedListener)\r\n  locked = false // unlock after initialization\r\n\r\n  return removeSizeWatcher\r\n}\r\n","export function removeFromArray(arr, elem) {\r\n  const idx = arr.indexOf(elem)\r\n  if (idx !== -1) arr.splice(idx, 1)\r\n}\r\n","function findScrollParents($el) {\r\n  const $scrollParents = []\r\n  let $parent = $el.parentNode\r\n\r\n  while ($parent && $parent.nodeName !== 'BODY' && $parent.nodeType === document.ELEMENT_NODE) {\r\n    if (isScrollElment($parent)) $scrollParents.push($parent)\r\n    $parent = $parent.parentNode\r\n  }\r\n  $scrollParents.push(window)\r\n\r\n  return $scrollParents\r\n}\r\n\r\nfunction isScrollElment($el) {\r\n  // Firefox wants us to check `-x` and `-y` variations as well\r\n  const { overflow, overflowX, overflowY } = getComputedStyle($el)\r\n  return /(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)\r\n}\r\n\r\nexport function setupResizeAndScrollEventListeners($el, listener) {\r\n  const $scrollParents = findScrollParents($el)\r\n\r\n  window.addEventListener('resize', listener, { passive: true })\r\n  $scrollParents.forEach(scrollParent => {\r\n    scrollParent.addEventListener('scroll', listener, { passive: true })\r\n  })\r\n\r\n  return function removeEventListeners() {\r\n    window.removeEventListener('resize', listener, { passive: true })\r\n    $scrollParents.forEach($scrollParent => {\r\n      $scrollParent.removeEventListener('scroll', listener, { passive: true })\r\n    })\r\n  }\r\n}\r\n","export function isNaN(x) {\r\n  return x !== x\r\n}\r\n","export const createMap = () => Object.create(null)\r\n","function isPlainObject(value) {\r\n  if (value == null || typeof value !== 'object') return false\r\n  return Object.getPrototypeOf(value) === Object.prototype\r\n}\r\n\r\nfunction copy(obj, key, value) {\r\n  if (isPlainObject(value)) {\r\n    obj[key] || (obj[key] = {})\r\n    deepExtend(obj[key], value)\r\n  } else {\r\n    obj[key] = value\r\n  }\r\n}\r\n\r\nexport function deepExtend(target, source) {\r\n  if (isPlainObject(source)) {\r\n    const keys = Object.keys(source)\r\n\r\n    for (let i = 0, len = keys.length; i < len; i++) {\r\n      copy(target, keys[i], source[keys[i]])\r\n    }\r\n  }\r\n\r\n  return target\r\n}\r\n","export function includes(arrOrStr, elem) {\r\n  return arrOrStr.indexOf(elem) !== -1\r\n}\r\n","export function find(arr, predicate, ctx) {\r\n  for (let i = 0, len = arr.length; i < len; i++) {\r\n    if (predicate.call(ctx, arr[i], i, arr)) return arr[i]\r\n  }\r\n  return undefined\r\n}\r\n","export function quickDiff(arrA, arrB) {\r\n  if (arrA.length !== arrB.length) return true\r\n\r\n  for (let i = 0; i < arrA.length; i++) {\r\n    if (arrA[i] !== arrB[i]) return true\r\n  }\r\n\r\n  return false\r\n}\r\n","// Magic value that indicates a root level node.\r\nexport const NO_PARENT_NODE = null;\r\n\r\n// Types of checked state.\r\nexport const UNCHECKED = 0;\r\nexport const INDETERMINATE = 1;\r\nexport const CHECKED = 2;\r\n\r\n// Types of count number.\r\nexport const ALL_CHILDREN = 'ALL_CHILDREN';\r\nexport const ALL_DESCENDANTS = 'ALL_DESCENDANTS';\r\nexport const LEAF_CHILDREN = 'LEAF_CHILDREN';\r\nexport const LEAF_DESCENDANTS = 'LEAF_DESCENDANTS';\r\n\r\n// Action types of delayed loading.\r\nexport const LOAD_ROOT_OPTIONS = 'LOAD_ROOT_OPTIONS';\r\nexport const LOAD_CHILDREN_OPTIONS = 'LOAD_CHILDREN_OPTIONS';\r\nexport const ASYNC_SEARCH = 'ASYNC_SEARCH';\r\n\r\n// Acceptable values of `valueConsistsOf` prop.\r\nexport const ALL = 'ALL';\r\nexport const BRANCH_PRIORITY = 'BRANCH_PRIORITY';\r\nexport const LEAF_PRIORITY = 'LEAF_PRIORITY';\r\nexport const ALL_WITH_INDETERMINATE = 'ALL_WITH_INDETERMINATE';\r\n\r\n// Acceptable values of `sortValueBy` prop.\r\nexport const ORDER_SELECTED = 'ORDER_SELECTED';\r\nexport const LEVEL = 'LEVEL';\r\nexport const INDEX = 'INDEX';\r\n\r\n// Key codes look-up table.\r\nexport const KEY_CODES = {\r\n\tBACKSPACE: 8,\r\n\tENTER: 13,\r\n\tESCAPE: 27,\r\n\tEND: 35,\r\n\tHOME: 36,\r\n\tARROW_LEFT: 37,\r\n\tARROW_UP: 38,\r\n\tARROW_RIGHT: 39,\r\n\tARROW_DOWN: 40,\r\n\tDELETE: 46\r\n};\r\n\r\n// Other constants.\r\nexport const INPUT_DEBOUNCE_DELAY =\r\n\tprocess.env.NODE_ENV === 'testing' ? /* to speed up unit testing */ 10 : /* istanbul ignore next */ 500;\r\nexport const MIN_INPUT_WIDTH = 5;\r\nexport const MENU_BUFFER = 40;\r\n","import {\r\n  warning,\r\n  debounce,\r\n  onLeftClick, scrollIntoView,\r\n  isNaN, isPromise, once,\r\n  identity, constant, createMap,\r\n  quickDiff, last as getLast, includes, find, removeFromArray,\r\n} from '../utils'\r\n\r\nimport {\r\n  NO_PARENT_NODE,\r\n  UNCHECKED, INDETERMINATE, CHECKED,\r\n  LOAD_ROOT_OPTIONS, LOAD_CHILDREN_OPTIONS, ASYNC_SEARCH,\r\n  ALL, BRANCH_PRIORITY, LEAF_PRIORITY, ALL_WITH_INDETERMINATE,\r\n  ALL_CHILDREN, ALL_DESCENDANTS, LEAF_CHILDREN, LEAF_DESCENDANTS,\r\n  ORDER_SELECTED, LEVEL, INDEX, INPUT_DEBOUNCE_DELAY,\r\n} from '../constants'\r\nimport fuzzysearch from 'fuzzysearch'\r\n\r\nfunction sortValueByIndex(a, b) {\r\n  let i = 0\r\n  do {\r\n    if (a.level < i) return -1\r\n    if (b.level < i) return 1\r\n    if (a.index[i] !== b.index[i]) return a.index[i] - b.index[i]\r\n    i++\r\n  } while (true)\r\n}\r\n\r\nfunction sortValueByLevel(a, b) {\r\n  return a.level === b.level\r\n    ? sortValueByIndex(a, b)\r\n    : a.level - b.level\r\n}\r\n\r\nfunction createAsyncOptionsStates() {\r\n  return {\r\n    isLoaded: false,\r\n    isLoading: false,\r\n    loadingError: '',\r\n  }\r\n}\r\n\r\nfunction slugify(str) {\r\n  const map = {\r\n    a: 'á|à|ã|â|ä|A|À|Á|Ã|Â|Ä',\r\n    e: 'é|è|ê|ë|E|É|È|Ê|Ë',\r\n    i: 'í|ì|î|ï|I|Í|Ì|Î|Ï',\r\n    o: 'ó|ò|ô|õ|ö|O|Ó|Ò|Ô|Õ|Ö',\r\n    u: 'ú|ù|û|ü|U|Ú|Ù|Û|Ü',\r\n  }\r\n\r\n  str = str.toLowerCase()\r\n\r\n  for (const pattern in map) {\r\n    str = str.replace(new RegExp(map[pattern], 'g'), pattern)\r\n  }\r\n  return str\r\n}\r\n\r\nfunction stringifyOptionPropValue(value) {\r\n  if (typeof value === 'string') return value\r\n  if (typeof value === 'number' && !isNaN(value)) return value + ''\r\n  // istanbul ignore next\r\n  return ''\r\n}\r\n\r\nfunction match(enableFuzzyMatch, replaceAccents, needle, haystack) {\r\n  return enableFuzzyMatch\r\n    ? fuzzysearch(needle, haystack)\r\n    : replaceAccents ? includes(slugify(haystack), slugify(needle)) : includes(haystack, needle)\r\n}\r\n\r\nfunction getErrorMessage(err) {\r\n  return err.message || /* istanbul ignore next */String(err)\r\n}\r\n\r\nlet instanceId = 0\r\n\r\nexport default {\r\n  provide() {\r\n    return {\r\n      // Enable access to the instance of root component of vue-treeselect\r\n      // across hierarchy.\r\n      instance: this,\r\n    }\r\n  },\r\n\r\n  props: {\r\n    /**\r\n     * Whether to allow resetting value even if there are disabled selected nodes.\r\n     */\r\n    allowClearingDisabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * When an ancestor node is selected/deselected, whether its disabled descendants should be selected/deselected.\r\n     * You may want to use this in conjunction with `allowClearingDisabled` prop.\r\n     */\r\n    allowSelectingDisabledDescendants: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Whether the menu should be always open.\r\n     */\r\n    alwaysOpen: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Append the menu to <body />?\r\n     */\r\n    appendToBody: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Whether to enable async search mode.\r\n     */\r\n    async: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Automatically focus the component on mount?\r\n     */\r\n    autoFocus: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Automatically load root options on mount. When set to `false`, root options will be loaded when the menu is opened.\r\n     */\r\n    autoLoadRootOptions: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    /**\r\n     * When user deselects a node, automatically deselect its ancestors. Applies to flat mode only.\r\n     */\r\n    autoDeselectAncestors: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * When user deselects a node, automatically deselect its descendants. Applies to flat mode only.\r\n     */\r\n    autoDeselectDescendants: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * When user selects a node, automatically select its ancestors. Applies to flat mode only.\r\n     */\r\n    autoSelectAncestors: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * When user selects a node, automatically select its descendants. Applies to flat mode only.\r\n     */\r\n    autoSelectDescendants: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Whether pressing backspace key removes the last item if there is no text input.\r\n     */\r\n    backspaceRemoves: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    /**\r\n     * Function that processes before clearing all input fields.\r\n     * Return `false` to prevent value from being cleared.\r\n     * @type {function(): (boolean|Promise<boolean>)}\r\n     */\r\n    beforeClearAll: {\r\n      type: Function,\r\n      default: constant(true),\r\n    },\r\n\r\n    /**\r\n     * Show branch nodes before leaf nodes?\r\n     */\r\n    branchNodesFirst: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Should cache results of every search request?\r\n     */\r\n    cacheOptions: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    /**\r\n     * Show an \"×\" button that resets value?\r\n     */\r\n    clearable: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    /**\r\n     * Title for the \"×\" button when `multiple: true`.\r\n     */\r\n    clearAllText: {\r\n      type: String,\r\n      default: 'Clear all',\r\n    },\r\n\r\n    /**\r\n     * Whether to clear the search input after selecting.\r\n     * Use only when `multiple` is `true`.\r\n     * For single-select mode, it **always** clears the input after selecting an option regardless of the prop value.\r\n     */\r\n    clearOnSelect: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Title for the \"×\" button.\r\n     */\r\n    clearValueText: {\r\n      type: String,\r\n      default: 'Clear value',\r\n    },\r\n\r\n    /**\r\n     * Whether to close the menu after selecting an option?\r\n     * Use only when `multiple` is `true`.\r\n     */\r\n    closeOnSelect: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    /**\r\n     * How many levels of branch nodes should be automatically expanded when loaded.\r\n     * Set `Infinity` to make all branch nodes expanded by default.\r\n     */\r\n    defaultExpandLevel: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    /**\r\n     * The default set of options to show before the user starts searching. Used for async search mode.\r\n     * When set to `true`, the results for search query as a empty string will be autoloaded.\r\n     * @type {boolean|node[]}\r\n     */\r\n    defaultOptions: {\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Whether pressing delete key removes the last item if there is no text input.\r\n     */\r\n    deleteRemoves: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    /**\r\n     * Delimiter to use to join multiple values for the hidden field value.\r\n     */\r\n    delimiter: {\r\n      type: String,\r\n      default: ',',\r\n    },\r\n\r\n    /**\r\n     * Only show the nodes that match the search value directly, excluding its ancestors.\r\n     *\r\n     * @type {Object}\r\n     */\r\n    flattenSearchResults: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Prevent branch nodes from being selected?\r\n     */\r\n    disableBranchNodes: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Disable the control?\r\n     */\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Disable the fuzzy matching functionality?\r\n     */\r\n    disableFuzzyMatching: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Whether to enable flat mode or not. Non-flat mode (default) means:\r\n     *   - Whenever a branch node gets checked, all its children will be checked too\r\n     *   - Whenever a branch node has all children checked, the branch node itself will be checked too\r\n     * Set `true` to disable this mechanism\r\n     */\r\n    flat: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Will be passed with all events as the last param.\r\n     * Useful for identifying events origin.\r\n    */\r\n    instanceId: {\r\n      // Add two trailing \"$\" to distinguish from explictly specified ids.\r\n      default: () => `${instanceId++}$$`,\r\n      type: [String, Number],\r\n    },\r\n\r\n    /**\r\n     * Joins multiple values into a single form field with the `delimiter` (legacy mode).\r\n    */\r\n    joinValues: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Limit the display of selected options.\r\n     * The rest will be hidden within the limitText string.\r\n     */\r\n    limit: {\r\n      type: Number,\r\n      default: Infinity,\r\n    },\r\n\r\n    /**\r\n     * Function that processes the message shown when selected elements pass the defined limit.\r\n     * @type {function(number): string}\r\n     */\r\n    limitText: {\r\n      type: Function,\r\n      default: function limitTextDefault(count) { // eslint-disable-line func-name-matching\r\n        return `and ${count} more`\r\n      },\r\n    },\r\n\r\n    /**\r\n     * Text displayed when loading options.\r\n     */\r\n    loadingText: {\r\n      type: String,\r\n      default: 'Loading...',\r\n    },\r\n\r\n    /**\r\n     * Used for dynamically loading options.\r\n     * @type {function({action: string, callback: (function((Error|string)=): void), parentNode: node=, instanceId}): void}\r\n     */\r\n    loadOptions: {\r\n      type: Function,\r\n    },\r\n\r\n    /**\r\n     * Which node properties to filter on.\r\n     */\r\n    matchKeys: {\r\n      type: Array,\r\n      default: constant(['label']),\r\n    },\r\n\r\n    /**\r\n     * Sets `maxHeight` style value of the menu.\r\n     */\r\n    maxHeight: {\r\n      type: Number,\r\n      default: 300,\r\n    },\r\n\r\n    /**\r\n     * Set `true` to allow selecting multiple options (a.k.a., multi-select mode).\r\n     */\r\n    multiple: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Generates a hidden <input /> tag with this field name for html forms.\r\n     */\r\n    name: {\r\n      type: String,\r\n    },\r\n\r\n    /**\r\n     * Text displayed when a branch node has no children.\r\n     */\r\n    noChildrenText: {\r\n      type: String,\r\n      default: 'No sub-options.',\r\n    },\r\n\r\n    /**\r\n     * Text displayed when there are no available options.\r\n     */\r\n    noOptionsText: {\r\n      type: String,\r\n      default: 'No options available.',\r\n    },\r\n\r\n    /**\r\n     * Text displayed when there are no matching search results.\r\n     */\r\n    noResultsText: {\r\n      type: String,\r\n      default: 'No results found...',\r\n    },\r\n\r\n    /**\r\n     * Used for normalizing source data.\r\n     * @type {function(node, instanceId): node}\r\n     */\r\n    normalizer: {\r\n      type: Function,\r\n      default: identity,\r\n    },\r\n\r\n    /**\r\n     * By default (`auto`), the menu will open below the control. If there is not\r\n     * enough space, vue-treeselect will automatically flip the menu.\r\n     * You can use one of other four options to force the menu to be always opened\r\n     * to specified direction.\r\n     * Acceptable values:\r\n     *   - `\"auto\"`\r\n     *   - `\"below\"`\r\n     *   - `\"bottom\"`\r\n     *   - `\"above\"`\r\n     *   - `\"top\"`\r\n     */\r\n    openDirection: {\r\n      type: String,\r\n      default: 'auto',\r\n      validator(value) {\r\n        const acceptableValues = ['auto', 'top', 'bottom', 'above', 'below']\r\n        return includes(acceptableValues, value)\r\n      },\r\n    },\r\n\r\n    /**\r\n     * Whether to automatically open the menu when the control is clicked.\r\n     */\r\n    openOnClick: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    /**\r\n     * Whether to automatically open the menu when the control is focused.\r\n     */\r\n    openOnFocus: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Array of available options.\r\n     * @type {node[]}\r\n     */\r\n    options: {\r\n      type: Array,\r\n    },\r\n\r\n    /**\r\n     * Field placeholder, displayed when there's no value.\r\n     */\r\n    placeholder: {\r\n      type: String,\r\n      default: 'Select...',\r\n    },\r\n\r\n    /**\r\n     * Applies HTML5 required attribute when needed.\r\n     */\r\n    required: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Text displayed asking user whether to retry loading children options.\r\n     */\r\n    retryText: {\r\n      type: String,\r\n      default: 'Retry?',\r\n    },\r\n\r\n    /**\r\n     * Title for the retry button.\r\n     */\r\n    retryTitle: {\r\n      type: String,\r\n      default: 'Click to retry',\r\n    },\r\n\r\n    /**\r\n     * Enable searching feature?\r\n     */\r\n    searchable: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    /**\r\n     * Search in ancestor nodes too.\r\n     */\r\n    searchNested: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Text tip to prompt for async search.\r\n     */\r\n    searchPromptText: {\r\n      type: String,\r\n      default: 'Type to search...',\r\n    },\r\n\r\n    /**\r\n     * Whether to show a children count next to the label of each branch node.\r\n     */\r\n    showCount: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Used in conjunction with `showCount` to specify which type of count number should be displayed.\r\n     * Acceptable values:\r\n     *   - \"ALL_CHILDREN\"\r\n     *   - \"ALL_DESCENDANTS\"\r\n     *   - \"LEAF_CHILDREN\"\r\n     *   - \"LEAF_DESCENDANTS\"\r\n     */\r\n    showCountOf: {\r\n      type: String,\r\n      default: ALL_CHILDREN,\r\n      validator(value) {\r\n        const acceptableValues = [ALL_CHILDREN, ALL_DESCENDANTS, LEAF_CHILDREN, LEAF_DESCENDANTS]\r\n        return includes(acceptableValues, value)\r\n      },\r\n    },\r\n\r\n    /**\r\n     * Whether to show children count when searching.\r\n     * Fallbacks to the value of `showCount` when not specified.\r\n     * @type {boolean}\r\n     */\r\n    showCountOnSearch: null,\r\n\r\n    /**\r\n     * In which order the selected options should be displayed in trigger & sorted in `value` array.\r\n     * Used for multi-select mode only.\r\n     * Acceptable values:\r\n     *   - \"ORDER_SELECTED\"\r\n     *   - \"LEVEL\"\r\n     *   - \"INDEX\"\r\n     */\r\n    sortValueBy: {\r\n      type: String,\r\n      default: ORDER_SELECTED,\r\n      validator(value) {\r\n        const acceptableValues = [ORDER_SELECTED, LEVEL, INDEX]\r\n        return includes(acceptableValues, value)\r\n      },\r\n    },\r\n\r\n    /**\r\n     * Tab index of the control.\r\n     */\r\n    tabIndex: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    /**\r\n     * The value of the control.\r\n     * Should be `id` or `node` object for single-select mode, or an array of `id` or `node` object for multi-select mode.\r\n     * Its format depends on the `valueFormat` prop.\r\n     * For most cases, just use `v-model` instead.\r\n     * @type {?Array}\r\n     */\r\n    value: null,\r\n\r\n    /**\r\n     * Which kind of nodes should be included in the `value` array in multi-select mode.\r\n     * Acceptable values:\r\n     *   - \"ALL\" - Any node that is checked will be included in the `value` array\r\n     *   - \"BRANCH_PRIORITY\" (default) - If a branch node is checked, all its descendants will be excluded in the `value` array\r\n     *   - \"LEAF_PRIORITY\" - If a branch node is checked, this node itself and its branch descendants will be excluded from the `value` array but its leaf descendants will be included\r\n     *   - \"ALL_WITH_INDETERMINATE\" - Any node that is checked will be included in the `value` array, plus indeterminate nodes\r\n     */\r\n    valueConsistsOf: {\r\n      type: String,\r\n      default: BRANCH_PRIORITY,\r\n      validator(value) {\r\n        const acceptableValues = [ALL, BRANCH_PRIORITY, LEAF_PRIORITY, ALL_WITH_INDETERMINATE]\r\n        return includes(acceptableValues, value)\r\n      },\r\n    },\r\n\r\n    /**\r\n     * Format of `value` prop.\r\n     * Note that, when set to `\"object\"`, only `id` & `label` properties are required in each `node` object in `value` prop.\r\n     * Acceptable values:\r\n     *   - \"id\"\r\n     *   - \"object\"\r\n     */\r\n    valueFormat: {\r\n      type: String,\r\n      default: 'id',\r\n    },\r\n\r\n    /**\r\n     * z-index of the menu.\r\n     */\r\n    zIndex: {\r\n      type: [Number, String],\r\n      default: 999,\r\n    },\r\n\r\n    /**\r\n     * Sync search throttling delay.\r\n     */\r\n    inputDebounceDelay: {\r\n      type: Number,\r\n      default: INPUT_DEBOUNCE_DELAY,\r\n    },\r\n\r\n    /**\r\n     * Replace accents for normal letter\r\n     */\r\n    replaceAccents: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Debounce Event Input Change\r\n     */\r\n    activeDebInputChange: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      trigger: {\r\n        // Is the control focused?\r\n        isFocused: false,\r\n        // User entered search query - value of the input.\r\n        searchQuery: '',\r\n      },\r\n      auxSearchQuery: '',\r\n      menu: {\r\n        // Is the menu opened?\r\n        isOpen: false,\r\n        // Id of current highlighted option.\r\n        current: null,\r\n        // The scroll position before last menu closing.\r\n        lastScrollPosition: 0,\r\n        // Which direction to open the menu.\r\n        placement: 'bottom',\r\n      },\r\n\r\n      forest: {\r\n        // Normalized options.\r\n        normalizedOptions: [],\r\n        // <id, node> map for quick look-up.\r\n        nodeMap: createMap(),\r\n        // <id, checkedState> map, used for multi-select mode.\r\n        checkedStateMap: createMap(),\r\n        // Id list of all selected options.\r\n        selectedNodeIds: this.extractCheckedNodeIdsFromValue(),\r\n        // <id, true> map for fast checking:\r\n        //   if (forest.selectedNodeIds.indexOf(id) !== -1) forest.selectedNodeMap[id] === true\r\n        selectedNodeMap: createMap(),\r\n      },\r\n\r\n      // States of root options.\r\n      rootOptionsStates: createAsyncOptionsStates(),\r\n\r\n      localSearch: {\r\n        // Has user entered any query to search local options?\r\n        active: false,\r\n        // Has any options matched the search query?\r\n        noResults: true,\r\n        // <id, countObject> map for counting matched children/descendants.\r\n        countMap: createMap(),\r\n      },\r\n\r\n      // <searchQuery, remoteSearchEntry> map.\r\n      remoteSearch: createMap(),\r\n\r\n      debounceQuery: debounce((val) => this.$emit('input-change', val), this.inputDebounceDelay)\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    /* eslint-disable valid-jsdoc */\r\n    /**\r\n     * Normalized nodes that have been selected.\r\n     * @type {node[]}\r\n     */\r\n    selectedNodes() {\r\n      return this.forest.selectedNodeIds.map(this.getNode)\r\n    },\r\n    /**\r\n     * Id list of selected nodes with `sortValueBy` prop applied.\r\n     * @type {nodeId[]}\r\n     */\r\n    internalValue() {\r\n      let internalValue\r\n\r\n      // istanbul ignore else\r\n      if (this.single || this.flat || this.disableBranchNodes || this.valueConsistsOf === ALL) {\r\n        internalValue = this.forest.selectedNodeIds.slice()\r\n      } else if (this.valueConsistsOf === BRANCH_PRIORITY) {\r\n        internalValue = this.forest.selectedNodeIds.filter(id => {\r\n          const node = this.getNode(id)\r\n          if (node.isRootNode) return true\r\n          return !this.isSelected(node.parentNode)\r\n        })\r\n      } else if (this.valueConsistsOf === LEAF_PRIORITY) {\r\n        internalValue = this.forest.selectedNodeIds.filter(id => {\r\n          const node = this.getNode(id)\r\n          if (node.isLeaf) return true\r\n          return node.children.length === 0\r\n        })\r\n      } else if (this.valueConsistsOf === ALL_WITH_INDETERMINATE) {\r\n        const indeterminateNodeIds = []\r\n        internalValue = this.forest.selectedNodeIds.slice()\r\n        this.selectedNodes.forEach(selectedNode => {\r\n          selectedNode.ancestors.forEach(ancestor => {\r\n            if (includes(indeterminateNodeIds, ancestor.id)) return\r\n            if (includes(internalValue, ancestor.id)) return\r\n            indeterminateNodeIds.push(ancestor.id)\r\n          })\r\n        })\r\n        internalValue.push(...indeterminateNodeIds)\r\n      }\r\n\r\n      if (this.sortValueBy === LEVEL) {\r\n        internalValue.sort((a, b) => sortValueByLevel(this.getNode(a), this.getNode(b)))\r\n      } else if (this.sortValueBy === INDEX) {\r\n        internalValue.sort((a, b) => sortValueByIndex(this.getNode(a), this.getNode(b)))\r\n      }\r\n\r\n      return internalValue\r\n    },\r\n    /**\r\n     * Has any option been selected?\r\n     * @type {boolean}\r\n     */\r\n    hasValue() {\r\n      return this.internalValue.length > 0\r\n    },\r\n    /**\r\n     * Single-select mode?\r\n     * @type {boolean}\r\n     */\r\n    single() {\r\n      return !this.multiple\r\n    },\r\n    /**\r\n     * Id list of nodes displayed in the menu. Nodes that are considered NOT visible:\r\n     *   - descendants of a collapsed branch node\r\n     *   - in local search mode, nodes that are not matched, unless\r\n     *       - it's a branch node and has matched descendants\r\n     *       - it's a leaf node and its parent node is explicitly set to show all children\r\n     * @type {id[]}\r\n     */\r\n    visibleOptionIds() {\r\n      const visibleOptionIds = []\r\n\r\n      this.traverseAllNodesByIndex(node => {\r\n        if (!this.localSearch.active || this.shouldOptionBeIncludedInSearchResult(node)) {\r\n          visibleOptionIds.push(node.id)\r\n        }\r\n        // Skip the traversal of descendants of a branch node if it's not expanded.\r\n        if (node.isBranch && !this.shouldExpand(node)) {\r\n          return false\r\n        }\r\n      })\r\n\r\n      return visibleOptionIds\r\n    },\r\n    /**\r\n     * Has any option should be displayed in the menu?\r\n     * @type {boolean}\r\n     */\r\n    hasVisibleOptions() {\r\n      return this.visibleOptionIds.length !== 0\r\n    },\r\n    /**\r\n     * Should show children count when searching?\r\n     * @type {boolean}\r\n     */\r\n    showCountOnSearchComputed() {\r\n      // Vue doesn't allow setting default prop value based on another prop value.\r\n      // So use computed property as a workaround.\r\n      // https://github.com/vuejs/vue/issues/6358\r\n      return typeof this.showCountOnSearch === 'boolean'\r\n        ? this.showCountOnSearch\r\n        : this.showCount\r\n    },\r\n    /**\r\n     * Is there any branch node?\r\n     * @type {boolean}\r\n     */\r\n    hasBranchNodes() {\r\n      return this.forest.normalizedOptions.some(rootNode => rootNode.isBranch)\r\n    },\r\n    shouldFlattenOptions() {\r\n      return this.localSearch.active && this.flattenSearchResults\r\n    },\r\n    /* eslint-enable valid-jsdoc */\r\n  },\r\n\r\n  watch: {\r\n    alwaysOpen(newValue) {\r\n      if (newValue) this.openMenu()\r\n      else this.closeMenu()\r\n    },\r\n\r\n    branchNodesFirst() {\r\n      this.initialize()\r\n    },\r\n\r\n    disabled(newValue) {\r\n      // force close the menu after disabling the control\r\n      if (newValue && this.menu.isOpen) this.closeMenu()\r\n      else if (!newValue && !this.menu.isOpen && this.alwaysOpen) this.openMenu()\r\n    },\r\n\r\n    flat() {\r\n      this.initialize()\r\n    },\r\n\r\n    internalValue(newValue, oldValue) {\r\n      const hasChanged = quickDiff(newValue, oldValue)\r\n      // #122\r\n      // Vue would trigger this watcher when `newValue` and `oldValue` are shallow-equal.\r\n      // We emit the `input` event only when the value actually changes.\r\n      if (hasChanged) this.$emit('input', this.getValue(), this.getInstanceId())\r\n    },\r\n\r\n    matchKeys() {\r\n      this.initialize()\r\n    },\r\n\r\n    multiple(newValue) {\r\n      // We need to rebuild the state when switching from single-select mode\r\n      // to multi-select mode.\r\n      // istanbul ignore else\r\n      if (newValue) this.buildForestState()\r\n    },\r\n\r\n    options: {\r\n      handler() {\r\n        if (this.async) return\r\n        // Re-initialize options when the `options` prop has changed.\r\n        this.initialize()\r\n        this.rootOptionsStates.isLoaded = Array.isArray(this.options)\r\n      },\r\n      deep: true,\r\n      immediate: true,\r\n    },\r\n\r\n    'trigger.searchQuery'() {\r\n      if (this.async) {\r\n        this.handleRemoteSearch()\r\n      } else {\r\n        this.handleLocalSearch()\r\n      }\r\n\r\n      this.$emit('search-change', this.trigger.searchQuery, this.getInstanceId())\r\n    },\r\n\r\n    auxSearchQuery: function auxSearchQuery(val) {\r\n      if (this.activeDebInputChange) {\r\n        this.debounceQuery(val);\r\n      } else {\r\n        this.$emit('input-change', val)\r\n      }\r\n    },\r\n\r\n    value() {\r\n      const nodeIdsFromValue = this.extractCheckedNodeIdsFromValue()\r\n      const hasChanged = quickDiff(nodeIdsFromValue, this.internalValue)\r\n      if (hasChanged) this.fixSelectedNodeIds(nodeIdsFromValue)\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    verifyProps() {\r\n      warning(\r\n        () => this.async ? this.searchable : true,\r\n        () => 'For async search mode, the value of \"searchable\" prop must be true.',\r\n      )\r\n\r\n      if (this.options == null && !this.loadOptions) {\r\n        warning(\r\n          () => false,\r\n          () => 'Are you meant to dynamically load options? You need to use \"loadOptions\" prop.',\r\n        )\r\n      }\r\n\r\n      if (this.flat) {\r\n        warning(\r\n          () => this.multiple,\r\n          () => 'You are using flat mode. But you forgot to add \"multiple=true\"?',\r\n        )\r\n      }\r\n\r\n      if (!this.flat) {\r\n        const propNames = [\r\n          'autoSelectAncestors',\r\n          'autoSelectDescendants',\r\n          'autoDeselectAncestors',\r\n          'autoDeselectDescendants',\r\n        ]\r\n\r\n        propNames.forEach(propName => {\r\n          warning(\r\n            () => !this[propName],\r\n            () => `\"${propName}\" only applies to flat mode.`,\r\n          )\r\n        })\r\n      }\r\n    },\r\n\r\n    resetFlags() {\r\n      this._blurOnSelect = false\r\n    },\r\n\r\n    initialize() {\r\n      const options = this.async\r\n        ? this.getRemoteSearchEntry().options\r\n        : this.options\r\n\r\n      if (Array.isArray(options)) {\r\n        // In case we are re-initializing options, keep the old state tree temporarily.\r\n        const prevNodeMap = this.forest.nodeMap\r\n        this.forest.nodeMap = createMap()\r\n        this.keepDataOfSelectedNodes(prevNodeMap)\r\n        this.forest.normalizedOptions = this.normalize(NO_PARENT_NODE, options, prevNodeMap)\r\n        // Cases that need fixing `selectedNodeIds`:\r\n        //   1) Children options of a checked node have been delayed loaded,\r\n        //      we should also mark these children as checked. (multi-select mode)\r\n        //   2) Root options have been delayed loaded, we need to initialize states\r\n        //      of these nodes. (multi-select mode)\r\n        //   3) Async search mode.\r\n        this.fixSelectedNodeIds(this.internalValue)\r\n      } else {\r\n        this.forest.normalizedOptions = []\r\n      }\r\n    },\r\n\r\n    getInstanceId() {\r\n      return this.instanceId == null ? this.id : this.instanceId\r\n    },\r\n\r\n    getValue() {\r\n      if (this.valueFormat === 'id') {\r\n        return this.multiple\r\n          ? this.internalValue.slice()\r\n          : this.internalValue[0]\r\n      }\r\n\r\n      const rawNodes = this.internalValue.map(id => this.getNode(id).raw)\r\n      return this.multiple ? rawNodes : rawNodes[0]\r\n    },\r\n\r\n    getNode(nodeId) {\r\n      warning(\r\n        () => nodeId != null,\r\n        () => `Invalid node id: ${nodeId}`,\r\n      )\r\n\r\n      if (nodeId == null) return null\r\n\r\n      return nodeId in this.forest.nodeMap\r\n        ? this.forest.nodeMap[nodeId]\r\n        : this.createFallbackNode(nodeId)\r\n    },\r\n\r\n    createFallbackNode(id) {\r\n      // In case there is a default selected node that is not loaded into the tree yet,\r\n      // we create a fallback node to keep the component working.\r\n      // When the real data is loaded, we'll override this fake node.\r\n\r\n      const raw = this.extractNodeFromValue(id)\r\n      const label = this.enhancedNormalizer(raw).label || `${id} (unknown)`\r\n      const fallbackNode = {\r\n        id,\r\n        label,\r\n        ancestors: [],\r\n        parentNode: NO_PARENT_NODE,\r\n        isFallbackNode: true,\r\n        isRootNode: true,\r\n        isLeaf: true,\r\n        isBranch: false,\r\n        isDisabled: false,\r\n        isNew: false,\r\n        index: [-1],\r\n        level: 0,\r\n        raw,\r\n      }\r\n\r\n      return this.$set(this.forest.nodeMap, id, fallbackNode)\r\n    },\r\n\r\n    extractCheckedNodeIdsFromValue() {\r\n      if (this.value == null) return []\r\n\r\n      if (this.valueFormat === 'id') {\r\n        return this.multiple\r\n          ? this.value.slice()\r\n          : [this.value]\r\n      }\r\n\r\n      return (this.multiple ? this.value : [this.value])\r\n        .map(node => this.enhancedNormalizer(node))\r\n        .map(node => node.id)\r\n    },\r\n\r\n    extractNodeFromValue(id) {\r\n      const defaultNode = { id }\r\n\r\n      if (this.valueFormat === 'id') {\r\n        return defaultNode\r\n      }\r\n\r\n      const valueArray = this.multiple\r\n        ? Array.isArray(this.value) ? this.value : []\r\n        : this.value ? [this.value] : []\r\n      const matched = find(\r\n        valueArray,\r\n        node => node && this.enhancedNormalizer(node).id === id,\r\n      )\r\n\r\n      return matched || defaultNode\r\n    },\r\n\r\n    fixSelectedNodeIds(nodeIdListOfPrevValue) {\r\n      let nextSelectedNodeIds = []\r\n\r\n      // istanbul ignore else\r\n      if (this.single || this.flat || this.disableBranchNodes || this.valueConsistsOf === ALL) {\r\n        nextSelectedNodeIds = nodeIdListOfPrevValue\r\n      } else if (this.valueConsistsOf === BRANCH_PRIORITY) {\r\n        nodeIdListOfPrevValue.forEach(nodeId => {\r\n          nextSelectedNodeIds.push(nodeId)\r\n          const node = this.getNode(nodeId)\r\n          if (node.isBranch) this.traverseDescendantsBFS(node, descendant => {\r\n            nextSelectedNodeIds.push(descendant.id)\r\n          })\r\n        })\r\n      } else if (this.valueConsistsOf === LEAF_PRIORITY) {\r\n        const map = createMap()\r\n        const queue = nodeIdListOfPrevValue.slice()\r\n        while (queue.length) {\r\n          const nodeId = queue.shift()\r\n          const node = this.getNode(nodeId)\r\n          nextSelectedNodeIds.push(nodeId)\r\n          if (node.isRootNode) continue\r\n          if (!(node.parentNode.id in map)) map[node.parentNode.id] = node.parentNode.children.length\r\n          if (--map[node.parentNode.id] === 0) queue.push(node.parentNode.id)\r\n        }\r\n      } else if (this.valueConsistsOf === ALL_WITH_INDETERMINATE) {\r\n        const map = createMap()\r\n        const queue = nodeIdListOfPrevValue.filter(nodeId => {\r\n          const node = this.getNode(nodeId)\r\n          return node.isLeaf || node.children.length === 0\r\n        })\r\n        while (queue.length) {\r\n          const nodeId = queue.shift()\r\n          const node = this.getNode(nodeId)\r\n          nextSelectedNodeIds.push(nodeId)\r\n          if (node.isRootNode) continue\r\n          if (!(node.parentNode.id in map)) map[node.parentNode.id] = node.parentNode.children.length\r\n          if (--map[node.parentNode.id] === 0) queue.push(node.parentNode.id)\r\n        }\r\n      }\r\n\r\n      const hasChanged = quickDiff(this.forest.selectedNodeIds, nextSelectedNodeIds)\r\n      // If `nextSelectedNodeIds` doesn't actually differ from old `selectedNodeIds`,\r\n      // we don't make the assignment to avoid triggering its watchers which may cause\r\n      // unnecessary calculations.\r\n      if (hasChanged) this.forest.selectedNodeIds = nextSelectedNodeIds\r\n\r\n      this.buildForestState()\r\n    },\r\n\r\n    keepDataOfSelectedNodes(prevNodeMap) {\r\n      // In case there is any selected node that is not present in the new `options` array.\r\n      // It could be useful for async search mode.\r\n      this.forest.selectedNodeIds.forEach(id => {\r\n        if (!prevNodeMap[id]) return\r\n        const node = {\r\n          ...prevNodeMap[id],\r\n          isFallbackNode: true,\r\n        }\r\n        this.$set(this.forest.nodeMap, id, node)\r\n      })\r\n    },\r\n\r\n    isSelected(node) {\r\n      // whether a node is selected (single-select mode) or fully-checked (multi-select mode)\r\n      return this.forest.selectedNodeMap[node.id] === true\r\n    },\r\n\r\n    traverseDescendantsBFS(parentNode, callback) {\r\n      // istanbul ignore if\r\n      if (!parentNode.isBranch) return\r\n      const queue = parentNode.children.slice()\r\n      while (queue.length) {\r\n        const currNode = queue[0]\r\n        if (currNode.isBranch) queue.push(...currNode.children)\r\n        callback(currNode)\r\n        queue.shift()\r\n      }\r\n    },\r\n\r\n    traverseDescendantsDFS(parentNode, callback) {\r\n      if (!parentNode.isBranch) return\r\n      parentNode.children.forEach(child => {\r\n        // deep-level node first\r\n        this.traverseDescendantsDFS(child, callback)\r\n        callback(child)\r\n      })\r\n    },\r\n\r\n    traverseAllNodesDFS(callback) {\r\n      this.forest.normalizedOptions.forEach(rootNode => {\r\n        // deep-level node first\r\n        this.traverseDescendantsDFS(rootNode, callback)\r\n        callback(rootNode)\r\n      })\r\n    },\r\n\r\n    traverseAllNodesByIndex(callback) {\r\n      const walk = parentNode => {\r\n        parentNode.children.forEach(child => {\r\n          if (callback(child) !== false && child.isBranch) {\r\n            walk(child)\r\n          }\r\n        })\r\n      }\r\n\r\n      // To simplify the code logic of traversal,\r\n      // we create a fake root node that holds all the root options.\r\n      walk({ children: this.forest.normalizedOptions })\r\n    },\r\n\r\n    toggleClickOutsideEvent(enabled) {\r\n      if (enabled) {\r\n        document.addEventListener('mousedown', this.handleClickOutside, false)\r\n      } else {\r\n        document.removeEventListener('mousedown', this.handleClickOutside, false)\r\n      }\r\n    },\r\n\r\n    getValueContainer() {\r\n      return this.$refs.control.$refs['value-container']\r\n    },\r\n\r\n    getInput() {\r\n      return this.getValueContainer().$refs.input\r\n    },\r\n\r\n    focusInput() {\r\n      this.getInput().focus()\r\n    },\r\n\r\n    blurInput() {\r\n      this.getInput().blur()\r\n    },\r\n\r\n    handleMouseDown: onLeftClick(function handleMouseDown(evt) {\r\n      evt.preventDefault()\r\n      evt.stopPropagation()\r\n\r\n      if (this.disabled) return\r\n\r\n      const isClickedOnValueContainer = this.getValueContainer().$el.contains(evt.target)\r\n      if (isClickedOnValueContainer && !this.menu.isOpen && (this.openOnClick || this.trigger.isFocused)) {\r\n        this.openMenu()\r\n      }\r\n\r\n      if (this._blurOnSelect) {\r\n        this.blurInput()\r\n      } else {\r\n        // Focus the input or prevent blurring.\r\n        this.focusInput()\r\n      }\r\n\r\n      this.resetFlags()\r\n    }),\r\n\r\n    handleClickOutside(evt) {\r\n      // istanbul ignore else\r\n      if (this.$refs.wrapper && !this.$refs.wrapper.contains(evt.target)) {\r\n        this.blurInput()\r\n        this.closeMenu()\r\n      }\r\n    },\r\n\r\n    handleLocalSearch() {\r\n      const { searchQuery } = this.trigger\r\n      const done = () => this.resetHighlightedOptionWhenNecessary(true)\r\n      if (!searchQuery) {\r\n        // Exit sync search mode.\r\n        this.localSearch.active = false\r\n        return done()\r\n      }\r\n\r\n      if (searchQuery.length > 3) {\r\n        // Enter sync search mode.\r\n        this.localSearch.active = true\r\n\r\n        // Reset states.\r\n        this.localSearch.noResults = true\r\n        this.traverseAllNodesDFS(node => {\r\n          if (node.isBranch) {\r\n            node.isExpandedOnSearch = false\r\n            node.showAllChildrenOnSearch = false\r\n            node.isMatched = false\r\n            node.hasMatchedDescendants = false\r\n            this.$set(this.localSearch.countMap, node.id, {\r\n              [ALL_CHILDREN]: 0,\r\n              [ALL_DESCENDANTS]: 0,\r\n              [LEAF_CHILDREN]: 0,\r\n              [LEAF_DESCENDANTS]: 0,\r\n            })\r\n          }\r\n        })\r\n\r\n        const lowerCasedSearchQuery = searchQuery.trim().toLocaleLowerCase()\r\n        const splitSearchQuery = lowerCasedSearchQuery.replace(/\\s+/g, ' ').split(' ')\r\n        this.traverseAllNodesDFS(node => {\r\n          if (this.searchNested && splitSearchQuery.length > 1) {\r\n            node.isMatched = splitSearchQuery.every(filterValue =>\r\n              match(false, false, filterValue, node.nestedSearchLabel),\r\n            )\r\n          } else {\r\n            node.isMatched = this.matchKeys.some(matchKey =>\r\n              match(!this.disableFuzzyMatching, this.replaceAccents, lowerCasedSearchQuery, node.lowerCased[matchKey]),\r\n            )\r\n          }\r\n\r\n          if (node.isMatched) {\r\n            this.localSearch.noResults = false\r\n            node.ancestors.forEach(ancestor => this.localSearch.countMap[ancestor.id][ALL_DESCENDANTS]++)\r\n            if (node.isLeaf) node.ancestors.forEach(ancestor => this.localSearch.countMap[ancestor.id][LEAF_DESCENDANTS]++)\r\n            if (node.parentNode !== NO_PARENT_NODE) {\r\n              this.localSearch.countMap[node.parentNode.id][ALL_CHILDREN] += 1\r\n              // istanbul ignore else\r\n              if (node.isLeaf) this.localSearch.countMap[node.parentNode.id][LEAF_CHILDREN] += 1\r\n            }\r\n          }\r\n\r\n          if (\r\n            (node.isMatched || (node.isBranch && node.isExpandedOnSearch)) &&\r\n            node.parentNode !== NO_PARENT_NODE\r\n          ) {\r\n            node.parentNode.isExpandedOnSearch = true\r\n            node.parentNode.hasMatchedDescendants = true\r\n          }\r\n        })\r\n\r\n        done()\r\n      }\r\n    },\r\n\r\n    handleRemoteSearch() {\r\n      const { searchQuery } = this.trigger\r\n      const entry = this.getRemoteSearchEntry()\r\n      const done = () => {\r\n        this.initialize()\r\n        this.resetHighlightedOptionWhenNecessary(true)\r\n      }\r\n\r\n      if ((searchQuery === '' || this.cacheOptions) && entry.isLoaded) {\r\n        return done()\r\n      }\r\n\r\n      this.callLoadOptionsProp({\r\n        action: ASYNC_SEARCH,\r\n        args: { searchQuery },\r\n        isPending() {\r\n          return entry.isLoading\r\n        },\r\n        start: () => {\r\n          entry.isLoading = true\r\n          entry.isLoaded = false\r\n          entry.loadingError = ''\r\n        },\r\n        succeed: options => {\r\n          entry.isLoaded = true\r\n          entry.options = options\r\n          // When the request completes, the search query may have changed.\r\n          // We only show these options if they are for the current search query.\r\n          if (this.trigger.searchQuery === searchQuery) done()\r\n        },\r\n        fail: err => {\r\n          entry.loadingError = getErrorMessage(err)\r\n        },\r\n        end: () => {\r\n          entry.isLoading = false\r\n        },\r\n      })\r\n    },\r\n\r\n    getRemoteSearchEntry() {\r\n      const { searchQuery } = this.trigger\r\n      const entry = this.remoteSearch[searchQuery] || {\r\n        ...createAsyncOptionsStates(),\r\n        options: [],\r\n      }\r\n\r\n      // Vue doesn't support directly watching on objects.\r\n      this.$watch(\r\n        () => entry.options,\r\n        () => {\r\n          // TODO: potential redundant re-initialization.\r\n          if (this.trigger.searchQuery === searchQuery) this.initialize()\r\n        },\r\n        { deep: true },\r\n      )\r\n\r\n      if (searchQuery === '') {\r\n        if (Array.isArray(this.defaultOptions)) {\r\n          entry.options = this.defaultOptions\r\n          entry.isLoaded = true\r\n          return entry\r\n        } else if (this.defaultOptions !== true) {\r\n          entry.isLoaded = true\r\n          return entry\r\n        }\r\n      }\r\n\r\n      if (!this.remoteSearch[searchQuery]) {\r\n        this.$set(this.remoteSearch, searchQuery, entry)\r\n      }\r\n\r\n      return entry\r\n    },\r\n\r\n    shouldExpand(node) {\r\n      return this.localSearch.active ? node.isExpandedOnSearch : node.isExpanded\r\n    },\r\n\r\n    shouldOptionBeIncludedInSearchResult(node) {\r\n      // 1) This option is matched.\r\n      if (node.isMatched) return true\r\n      // 2) This option is not matched, but has matched descendant(s).\r\n      if (node.isBranch && node.hasMatchedDescendants && !this.flattenSearchResults) return true\r\n      // 3) This option's parent has no matched descendants,\r\n      //    but after being expanded, all its children should be shown.\r\n      if (!node.isRootNode && node.parentNode.showAllChildrenOnSearch) return true\r\n      // 4) The default case.\r\n      return false\r\n    },\r\n\r\n    shouldShowOptionInMenu(node) {\r\n      if (this.localSearch.active && !this.shouldOptionBeIncludedInSearchResult(node)) {\r\n        return false\r\n      }\r\n      return true\r\n    },\r\n\r\n    getControl() {\r\n      return this.$refs.control.$el\r\n    },\r\n\r\n    getMenu() {\r\n      const ref = this.appendToBody ? this.$refs.portal.portalTarget : this\r\n      const $menu = ref.$refs.menu.$refs.menu\r\n      return $menu && $menu.nodeName !== '#comment' ? $menu : null\r\n    },\r\n\r\n    setCurrentHighlightedOption(node, scroll = true) {\r\n      const prev = this.menu.current\r\n      if (prev != null && prev in this.forest.nodeMap) {\r\n        this.forest.nodeMap[prev].isHighlighted = false\r\n      }\r\n\r\n      this.menu.current = node.id\r\n      node.isHighlighted = true\r\n\r\n      if (this.menu.isOpen && scroll) {\r\n        const scrollToOption = () => {\r\n          const $menu = this.getMenu()\r\n          const $option = $menu.querySelector(`.vue-treeselect__option[data-id=\"${node.id}\"]`)\r\n          if ($option) scrollIntoView($menu, $option)\r\n        }\r\n\r\n        // In case `openMenu()` is just called and the menu is not rendered yet.\r\n        if (this.getMenu()) {\r\n          scrollToOption()\r\n        } else {\r\n          // istanbul ignore next\r\n          this.$nextTick(scrollToOption)\r\n        }\r\n      }\r\n    },\r\n\r\n    resetHighlightedOptionWhenNecessary(forceReset = false) {\r\n      const { current } = this.menu\r\n\r\n      if (\r\n        forceReset || current == null ||\r\n        !(current in this.forest.nodeMap) ||\r\n        !this.shouldShowOptionInMenu(this.getNode(current))\r\n      ) {\r\n        this.highlightFirstOption()\r\n      }\r\n    },\r\n\r\n    highlightFirstOption() {\r\n      if (!this.hasVisibleOptions) return\r\n\r\n      const first = this.visibleOptionIds[0]\r\n      this.setCurrentHighlightedOption(this.getNode(first))\r\n    },\r\n\r\n    highlightPrevOption() {\r\n      if (!this.hasVisibleOptions) return\r\n\r\n      const prev = this.visibleOptionIds.indexOf(this.menu.current) - 1\r\n      if (prev === -1) return this.highlightLastOption()\r\n      this.setCurrentHighlightedOption(this.getNode(this.visibleOptionIds[prev]))\r\n    },\r\n\r\n    highlightNextOption() {\r\n      if (!this.hasVisibleOptions) return\r\n\r\n      const next = this.visibleOptionIds.indexOf(this.menu.current) + 1\r\n      if (next === this.visibleOptionIds.length) return this.highlightFirstOption()\r\n      this.setCurrentHighlightedOption(this.getNode(this.visibleOptionIds[next]))\r\n    },\r\n\r\n    highlightLastOption() {\r\n      if (!this.hasVisibleOptions) return\r\n\r\n      const last = getLast(this.visibleOptionIds)\r\n      this.setCurrentHighlightedOption(this.getNode(last))\r\n    },\r\n\r\n    resetSearchQuery() {\r\n      this.trigger.searchQuery = ''\r\n    },\r\n\r\n    closeMenu() {\r\n      if (!this.menu.isOpen || (!this.disabled && this.alwaysOpen)) return\r\n      this.saveMenuScrollPosition()\r\n      this.menu.isOpen = false\r\n      this.toggleClickOutsideEvent(false)\r\n      this.resetSearchQuery()\r\n      this.$emit('close', this.getValue(), this.getInstanceId())\r\n    },\r\n\r\n    openMenu() {\r\n      if (this.disabled || this.menu.isOpen) return\r\n      this.menu.isOpen = true\r\n      this.$nextTick(this.resetHighlightedOptionWhenNecessary)\r\n      this.$nextTick(this.restoreMenuScrollPosition)\r\n      if (!this.options && !this.async) this.loadRootOptions()\r\n      this.toggleClickOutsideEvent(true)\r\n      this.$emit('open', this.getInstanceId())\r\n    },\r\n\r\n    toggleMenu() {\r\n      if (this.menu.isOpen) {\r\n        this.closeMenu()\r\n      } else {\r\n        this.openMenu()\r\n      }\r\n    },\r\n\r\n    toggleExpanded(node) {\r\n      let nextState\r\n\r\n      if (this.localSearch.active) {\r\n        nextState = node.isExpandedOnSearch = !node.isExpandedOnSearch\r\n        if (nextState) node.showAllChildrenOnSearch = true\r\n      } else {\r\n        nextState = node.isExpanded = !node.isExpanded\r\n      }\r\n\r\n      if (nextState && !node.childrenStates.isLoaded) {\r\n        this.loadChildrenOptions(node)\r\n      }\r\n    },\r\n\r\n    buildForestState() {\r\n      const selectedNodeMap = createMap()\r\n      this.forest.selectedNodeIds.forEach(selectedNodeId => {\r\n        selectedNodeMap[selectedNodeId] = true\r\n      })\r\n      this.forest.selectedNodeMap = selectedNodeMap\r\n\r\n      const checkedStateMap = createMap()\r\n      if (this.multiple) {\r\n        this.traverseAllNodesByIndex(node => {\r\n          checkedStateMap[node.id] = UNCHECKED\r\n        })\r\n\r\n        this.selectedNodes.forEach(selectedNode => {\r\n          checkedStateMap[selectedNode.id] = CHECKED\r\n\r\n          if (!this.flat && !this.disableBranchNodes) {\r\n            selectedNode.ancestors.forEach(ancestorNode => {\r\n              if (!this.isSelected(ancestorNode)) {\r\n                checkedStateMap[ancestorNode.id] = INDETERMINATE\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n      this.forest.checkedStateMap = checkedStateMap\r\n    },\r\n\r\n    enhancedNormalizer(raw) {\r\n      return {\r\n        ...raw,\r\n        ...this.normalizer(raw, this.getInstanceId()),\r\n      }\r\n    },\r\n\r\n    normalize(parentNode, nodes, prevNodeMap) {\r\n      let normalizedOptions = nodes\r\n        .map(node => [this.enhancedNormalizer(node), node])\r\n        .map(([node, raw], index) => {\r\n          this.checkDuplication(node)\r\n          this.verifyNodeShape(node)\r\n\r\n          const { id, label, children, isDefaultExpanded } = node\r\n          const isRootNode = parentNode === NO_PARENT_NODE\r\n          const level = isRootNode ? 0 : parentNode.level + 1\r\n          const isBranch = Array.isArray(children) || children === null\r\n          const isLeaf = !isBranch\r\n          const isDisabled = !!node.isDisabled || (!this.flat && !isRootNode && parentNode.isDisabled)\r\n          const isNew = !!node.isNew\r\n          const lowerCased = this.matchKeys.reduce((prev, key) => ({\r\n            ...prev,\r\n            [key]: stringifyOptionPropValue(node[key]).toLocaleLowerCase(),\r\n          }), {})\r\n          const nestedSearchLabel = isRootNode\r\n            ? lowerCased.label\r\n            : parentNode.nestedSearchLabel + ' ' + lowerCased.label\r\n\r\n          const normalized = this.$set(this.forest.nodeMap, id, createMap())\r\n          this.$set(normalized, 'id', id)\r\n          this.$set(normalized, 'label', label)\r\n          this.$set(normalized, 'level', level)\r\n          this.$set(normalized, 'ancestors', isRootNode ? [] : [parentNode].concat(parentNode.ancestors))\r\n          this.$set(normalized, 'index', (isRootNode ? [] : parentNode.index).concat(index))\r\n          this.$set(normalized, 'parentNode', parentNode)\r\n          this.$set(normalized, 'lowerCased', lowerCased)\r\n          this.$set(normalized, 'nestedSearchLabel', nestedSearchLabel)\r\n          this.$set(normalized, 'isDisabled', isDisabled)\r\n          this.$set(normalized, 'isNew', isNew)\r\n          this.$set(normalized, 'isMatched', false)\r\n          this.$set(normalized, 'isHighlighted', false)\r\n          this.$set(normalized, 'isBranch', isBranch)\r\n          this.$set(normalized, 'isLeaf', isLeaf)\r\n          this.$set(normalized, 'isRootNode', isRootNode)\r\n          this.$set(normalized, 'raw', raw)\r\n\r\n          if (isBranch) {\r\n            const isLoaded = Array.isArray(children)\r\n\r\n            this.$set(normalized, 'childrenStates', {\r\n              ...createAsyncOptionsStates(),\r\n              isLoaded,\r\n            })\r\n            this.$set(normalized, 'isExpanded', typeof isDefaultExpanded === 'boolean'\r\n              ? isDefaultExpanded\r\n              : level < this.defaultExpandLevel)\r\n            this.$set(normalized, 'hasMatchedDescendants', false)\r\n            this.$set(normalized, 'hasDisabledDescendants', false)\r\n            this.$set(normalized, 'isExpandedOnSearch', false)\r\n            this.$set(normalized, 'showAllChildrenOnSearch', false)\r\n            this.$set(normalized, 'count', {\r\n              [ALL_CHILDREN]: 0,\r\n              [ALL_DESCENDANTS]: 0,\r\n              [LEAF_CHILDREN]: 0,\r\n              [LEAF_DESCENDANTS]: 0,\r\n            })\r\n            this.$set(normalized, 'children', isLoaded\r\n              ? this.normalize(normalized, children, prevNodeMap)\r\n              : [])\r\n\r\n            if (isDefaultExpanded === true) normalized.ancestors.forEach(ancestor => {\r\n              ancestor.isExpanded = true\r\n            })\r\n\r\n            if (!isLoaded && typeof this.loadOptions !== 'function') {\r\n              warning(\r\n                () => false,\r\n                () => 'Unloaded branch node detected. \"loadOptions\" prop is required to load its children.',\r\n              )\r\n            } else if (!isLoaded && normalized.isExpanded) {\r\n              this.loadChildrenOptions(normalized)\r\n            }\r\n          }\r\n\r\n          normalized.ancestors.forEach(ancestor => ancestor.count[ALL_DESCENDANTS]++)\r\n          if (isLeaf) normalized.ancestors.forEach(ancestor => ancestor.count[LEAF_DESCENDANTS]++)\r\n          if (!isRootNode) {\r\n            parentNode.count[ALL_CHILDREN] += 1\r\n            if (isLeaf) parentNode.count[LEAF_CHILDREN] += 1\r\n            if (isDisabled) parentNode.hasDisabledDescendants = true\r\n          }\r\n\r\n          // Preserve previous states.\r\n          if (prevNodeMap && prevNodeMap[id]) {\r\n            const prev = prevNodeMap[id]\r\n\r\n            normalized.isMatched = prev.isMatched\r\n            normalized.showAllChildrenOnSearch = prev.showAllChildrenOnSearch\r\n            normalized.isHighlighted = prev.isHighlighted\r\n\r\n            if (prev.isBranch && normalized.isBranch) {\r\n              normalized.isExpanded = prev.isExpanded\r\n              normalized.isExpandedOnSearch = prev.isExpandedOnSearch\r\n              // #97\r\n              // If `isLoaded` was true, but IS NOT now, we consider this branch node\r\n              // to be reset to unloaded state by the user of this component.\r\n              if (prev.childrenStates.isLoaded && !normalized.childrenStates.isLoaded) {\r\n                // Make sure the node is collapsed, then the user can load its\r\n                // children again (by expanding).\r\n                normalized.isExpanded = false\r\n                // We have reset `childrenStates` and don't want to preserve states here.\r\n              } else {\r\n                normalized.childrenStates = { ...prev.childrenStates }\r\n              }\r\n            }\r\n          }\r\n\r\n          return normalized\r\n        })\r\n\r\n      if (this.branchNodesFirst) {\r\n        const branchNodes = normalizedOptions.filter(option => option.isBranch)\r\n        const leafNodes = normalizedOptions.filter(option => option.isLeaf)\r\n        normalizedOptions = branchNodes.concat(leafNodes)\r\n      }\r\n\r\n      return normalizedOptions\r\n    },\r\n\r\n    loadRootOptions() {\r\n      this.callLoadOptionsProp({\r\n        action: LOAD_ROOT_OPTIONS,\r\n        isPending: () => {\r\n          return this.rootOptionsStates.isLoading\r\n        },\r\n        start: () => {\r\n          this.rootOptionsStates.isLoading = true\r\n          this.rootOptionsStates.loadingError = ''\r\n        },\r\n        succeed: () => {\r\n          this.rootOptionsStates.isLoaded = true\r\n          // Wait for `options` being re-initialized.\r\n          this.$nextTick(() => {\r\n            this.resetHighlightedOptionWhenNecessary(true)\r\n          })\r\n        },\r\n        fail: err => {\r\n          this.rootOptionsStates.loadingError = getErrorMessage(err)\r\n        },\r\n        end: () => {\r\n          this.rootOptionsStates.isLoading = false\r\n        },\r\n      })\r\n    },\r\n\r\n    loadChildrenOptions(parentNode) {\r\n      // The options may be re-initialized anytime during the loading process.\r\n      // So `parentNode` can be stale and we use `getNode()` to avoid that.\r\n\r\n      const { id, raw } = parentNode\r\n\r\n      this.callLoadOptionsProp({\r\n        action: LOAD_CHILDREN_OPTIONS,\r\n        args: {\r\n          // We always pass the raw node instead of the normalized node to any\r\n          // callback provided by the user of this component.\r\n          // Because the shape of the raw node is more likely to be closing to\r\n          // what the back-end API service of the application needs.\r\n          parentNode: raw,\r\n        },\r\n        isPending: () => {\r\n          return this.getNode(id).childrenStates.isLoading\r\n        },\r\n        start: () => {\r\n          this.getNode(id).childrenStates.isLoading = true\r\n          this.getNode(id).childrenStates.loadingError = ''\r\n        },\r\n        succeed: () => {\r\n          this.getNode(id).childrenStates.isLoaded = true\r\n        },\r\n        fail: err => {\r\n          this.getNode(id).childrenStates.loadingError = getErrorMessage(err)\r\n        },\r\n        end: () => {\r\n          this.getNode(id).childrenStates.isLoading = false\r\n        },\r\n      })\r\n    },\r\n\r\n    callLoadOptionsProp({ action, args, isPending, start, succeed, fail, end }) {\r\n      if (!this.loadOptions || isPending()) {\r\n        return\r\n      }\r\n\r\n      start()\r\n\r\n      const callback = once((err, result) => {\r\n        if (err) {\r\n          fail(err)\r\n        } else {\r\n          succeed(result)\r\n        }\r\n\r\n        end()\r\n      })\r\n      const result = this.loadOptions({\r\n        id: this.getInstanceId(),\r\n        instanceId: this.getInstanceId(),\r\n        action,\r\n        ...args,\r\n        callback,\r\n      })\r\n\r\n      if (isPromise(result)) {\r\n        result.then(() => {\r\n          callback()\r\n        }, err => {\r\n          callback(err)\r\n        }).catch(err => {\r\n          // istanbul ignore next\r\n          console.error(err)\r\n        })\r\n      }\r\n    },\r\n\r\n    checkDuplication(node) {\r\n      warning(\r\n        () => !((node.id in this.forest.nodeMap) && !this.forest.nodeMap[node.id].isFallbackNode),\r\n        () => `Detected duplicate presence of node id ${JSON.stringify(node.id)}. ` +\r\n          `Their labels are \"${this.forest.nodeMap[node.id].label}\" and \"${node.label}\" respectively.`,\r\n      )\r\n    },\r\n\r\n    verifyNodeShape(node) {\r\n      warning(\r\n        () => !(node.children === undefined && node.isBranch === true),\r\n        () => 'Are you meant to declare an unloaded branch node? ' +\r\n          '`isBranch: true` is no longer supported, please use `children: null` instead.',\r\n      )\r\n    },\r\n\r\n    select(node) {\r\n      if (this.disabled || node.isDisabled) {\r\n        return\r\n      }\r\n\r\n      if (this.single) {\r\n        this.clear()\r\n      }\r\n\r\n      const nextState = this.multiple && !this.flat\r\n        ? this.forest.checkedStateMap[node.id] === UNCHECKED\r\n        : !this.isSelected(node)\r\n\r\n      if (nextState) {\r\n        this._selectNode(node)\r\n      } else {\r\n        this._deselectNode(node)\r\n      }\r\n\r\n      this.buildForestState()\r\n\r\n      if (nextState) {\r\n        this.$emit('select', node.raw, this.getInstanceId())\r\n      } else {\r\n        this.$emit('deselect', node.raw, this.getInstanceId())\r\n      }\r\n\r\n      if (this.localSearch.active && nextState && (this.single || this.clearOnSelect)) {\r\n        this.resetSearchQuery()\r\n      }\r\n\r\n      if (this.single && this.closeOnSelect) {\r\n        this.closeMenu()\r\n\r\n        // istanbul ignore else\r\n        if (this.searchable) {\r\n          this._blurOnSelect = true\r\n        }\r\n      }\r\n    },\r\n\r\n    clear() {\r\n      if (this.hasValue) {\r\n        if (this.single || this.allowClearingDisabled) {\r\n          this.forest.selectedNodeIds = []\r\n        } else /* if (this.multiple && !this.allowClearingDisabled) */ {\r\n          this.forest.selectedNodeIds = this.forest.selectedNodeIds.filter(nodeId =>\r\n            this.getNode(nodeId).isDisabled,\r\n          )\r\n        }\r\n\r\n        this.buildForestState()\r\n      }\r\n    },\r\n\r\n    // This is meant to be called only by `select()`.\r\n    _selectNode(node) {\r\n      if (this.single || this.disableBranchNodes) {\r\n        return this.addValue(node)\r\n      }\r\n\r\n      if (this.flat) {\r\n        this.addValue(node)\r\n\r\n        if (this.autoSelectAncestors) {\r\n          node.ancestors.forEach(ancestor => {\r\n            if (!this.isSelected(ancestor) && !ancestor.isDisabled) this.addValue(ancestor)\r\n          })\r\n        } else if (this.autoSelectDescendants) {\r\n          this.traverseDescendantsBFS(node, descendant => {\r\n            if (!this.isSelected(descendant) && !descendant.isDisabled) this.addValue(descendant)\r\n          })\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      const isFullyChecked = (\r\n        node.isLeaf ||\r\n        (/* node.isBranch && */!node.hasDisabledDescendants) ||\r\n        (/* node.isBranch && */this.allowSelectingDisabledDescendants)\r\n      )\r\n      if (isFullyChecked) {\r\n        this.addValue(node)\r\n      }\r\n\r\n      if (node.isBranch) {\r\n        this.traverseDescendantsBFS(node, descendant => {\r\n          if (!descendant.isDisabled || this.allowSelectingDisabledDescendants) {\r\n            this.addValue(descendant)\r\n          }\r\n        })\r\n      }\r\n\r\n      if (isFullyChecked) {\r\n        let curr = node\r\n        while ((curr = curr.parentNode) !== NO_PARENT_NODE) {\r\n          if (curr.children.every(this.isSelected)) this.addValue(curr)\r\n          else break\r\n        }\r\n      }\r\n    },\r\n\r\n    // This is meant to be called only by `select()`.\r\n    _deselectNode(node) {\r\n      if (this.disableBranchNodes) {\r\n        return this.removeValue(node)\r\n      }\r\n\r\n      if (this.flat) {\r\n        this.removeValue(node)\r\n\r\n        if (this.autoDeselectAncestors) {\r\n          node.ancestors.forEach(ancestor => {\r\n            if (this.isSelected(ancestor) && !ancestor.isDisabled) this.removeValue(ancestor)\r\n          })\r\n        } else if (this.autoDeselectDescendants) {\r\n          this.traverseDescendantsBFS(node, descendant => {\r\n            if (this.isSelected(descendant) && !descendant.isDisabled) this.removeValue(descendant)\r\n          })\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      let hasUncheckedSomeDescendants = false\r\n      if (node.isBranch) {\r\n        this.traverseDescendantsDFS(node, descendant => {\r\n          if (!descendant.isDisabled || this.allowSelectingDisabledDescendants) {\r\n            this.removeValue(descendant)\r\n            hasUncheckedSomeDescendants = true\r\n          }\r\n        })\r\n      }\r\n\r\n      if (\r\n        node.isLeaf ||\r\n        /* node.isBranch && */hasUncheckedSomeDescendants ||\r\n        /* node.isBranch && */node.children.length === 0\r\n      ) {\r\n        this.removeValue(node)\r\n\r\n        let curr = node\r\n        while ((curr = curr.parentNode) !== NO_PARENT_NODE) {\r\n          if (this.isSelected(curr)) this.removeValue(curr)\r\n          else break\r\n        }\r\n      }\r\n    },\r\n\r\n    addValue(node) {\r\n      this.forest.selectedNodeIds.push(node.id)\r\n      this.forest.selectedNodeMap[node.id] = true\r\n    },\r\n\r\n    removeValue(node) {\r\n      removeFromArray(this.forest.selectedNodeIds, node.id)\r\n      delete this.forest.selectedNodeMap[node.id]\r\n    },\r\n\r\n    removeLastValue() {\r\n      if (!this.hasValue) return\r\n      if (this.single) return this.clear()\r\n      const lastValue = getLast(this.internalValue)\r\n      const lastSelectedNode = this.getNode(lastValue)\r\n      this.select(lastSelectedNode) // deselect\r\n    },\r\n\r\n    saveMenuScrollPosition() {\r\n      const $menu = this.getMenu()\r\n      // istanbul ignore else\r\n      if ($menu) this.menu.lastScrollPosition = $menu.scrollTop\r\n    },\r\n\r\n    restoreMenuScrollPosition() {\r\n      const $menu = this.getMenu()\r\n      // istanbul ignore else\r\n      if ($menu) $menu.scrollTop = this.menu.lastScrollPosition\r\n    },\r\n  },\r\n\r\n  created() {\r\n    this.verifyProps()\r\n    this.resetFlags()\r\n  },\r\n\r\n  mounted() {\r\n    if (this.autoFocus) this.focusInput()\r\n    if (!this.options && !this.async && this.autoLoadRootOptions) this.loadRootOptions()\r\n    if (this.alwaysOpen) this.openMenu()\r\n    if (this.async && this.defaultOptions) this.handleRemoteSearch()\r\n  },\r\n\r\n  destroyed() {\r\n    // istanbul ignore next\r\n    this.toggleClickOutsideEvent(false)\r\n  },\r\n}\r\n","<script>\r\n  import { isNaN } from '../utils'\r\n\r\n  function stringifyValue(value) {\r\n    if (typeof value === 'string') return value\r\n    // istanbul ignore else\r\n    if (value != null && !isNaN(value)) return JSON.stringify(value)\r\n    // istanbul ignore next\r\n    return ''\r\n  }\r\n\r\n  export default {\r\n    name: 'vue-treeselect--hidden-fields',\r\n    inject: [ 'instance' ],\r\n    functional: true,\r\n\r\n    render(_, context) {\r\n      const { instance } = context.injections\r\n\r\n      if (!instance.name || instance.disabled || !instance.hasValue) return null\r\n\r\n      let stringifiedValues = instance.internalValue.map(stringifyValue)\r\n\r\n      if (instance.multiple && instance.joinValues) stringifiedValues = [\r\n        stringifiedValues.join(instance.delimiter),\r\n      ]\r\n\r\n      return stringifiedValues.map((stringifiedValue, i) => (\r\n        <input type=\"hidden\"\r\n          name={instance.name}\r\n          value={stringifiedValue}\r\n          key={'hidden-field-' + i}\r\n        />\r\n      ))\r\n    },\r\n  }\r\n</script>\r\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var render, staticRenderFns\nimport script from \"./HiddenFields.vue?vue&type=script&lang=js&\"\nexport * from \"./HiddenFields.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Proyectos Aito\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4d48089a')) {\n      api.createRecord('4d48089a', component.options)\n    } else {\n      api.reload('4d48089a', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/HiddenFields.vue\"\nexport default component.exports","<script>\r\nimport { debounce, deepExtend, includes } from \"../utils\";\r\nimport { MIN_INPUT_WIDTH, KEY_CODES } from \"../constants\";\r\n\r\nconst keysThatRequireMenuBeingOpen = [\r\n  KEY_CODES.ENTER,\r\n  KEY_CODES.END,\r\n  KEY_CODES.HOME,\r\n  KEY_CODES.ARROW_LEFT,\r\n  KEY_CODES.ARROW_UP,\r\n  KEY_CODES.ARROW_RIGHT,\r\n  KEY_CODES.ARROW_DOWN,\r\n];\r\n\r\nexport default {\r\n  name: \"vue-treeselect--input\",\r\n  inject: [\"instance\"],\r\n\r\n  data: () => ({\r\n    inputWidth: MIN_INPUT_WIDTH,\r\n    value: \"\",\r\n  }),\r\n\r\n  computed: {\r\n    needAutoSize() {\r\n      const { instance } = this;\r\n\r\n      return instance.searchable && !instance.disabled && instance.multiple;\r\n    },\r\n\r\n    inputStyle() {\r\n      return {\r\n        width: this.needAutoSize ? `${this.inputWidth}px` : null,\r\n      };\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    \"instance.trigger.searchQuery\"(newValue) {\r\n      this.value = newValue;\r\n    },\r\n\r\n    value() {\r\n      // istanbul ignore else\r\n      if (this.needAutoSize) this.$nextTick(this.updateInputWidth);\r\n    },\r\n  },\r\n\r\n  created() {\r\n    this.debouncedCallback = debounce(\r\n      this.updateSearchQuery,\r\n      this.instance.inputDebounceDelay,\r\n      { leading: true, trailing: true }\r\n    );\r\n  },\r\n\r\n  methods: {\r\n    clear() {\r\n      this.onInput({\r\n        target: { value: \"\" },\r\n      });\r\n    },\r\n\r\n    focus() {\r\n      const { instance } = this;\r\n\r\n      if (!instance.disabled) {\r\n        this.$refs.input && this.$refs.input.focus();\r\n      }\r\n    },\r\n\r\n    blur() {\r\n      this.$refs.input && this.$refs.input.blur();\r\n    },\r\n\r\n    onFocus() {\r\n      const { instance } = this;\r\n\r\n      instance.trigger.isFocused = true;\r\n      // istanbul ignore else\r\n      if (instance.openOnFocus) instance.openMenu();\r\n    },\r\n\r\n    onBlur() {\r\n      const { instance } = this;\r\n      const menu = instance.getMenu();\r\n      // #15\r\n      // istanbul ignore next\r\n      if (menu && document.activeElement === menu) {\r\n        return this.focus();\r\n      }\r\n      instance.trigger.isFocused = false;\r\n      //instance.closeMenu();\r\n    },\r\n\r\n    onInput(evt) {\r\n      const { value } = evt.target;\r\n      this.instance.auxSearchQuery = value;\r\n      this.value = value;\r\n\r\n      if (value) {\r\n        this.debouncedCallback();\r\n      } else {\r\n        this.debouncedCallback.cancel();\r\n        this.updateSearchQuery();\r\n      }\r\n    },\r\n\r\n    // 用 keyUp 事件存在一个问题，删除输入框最后一个字符也会导致取消选中最后一项\r\n    onKeyDown(evt) {\r\n      const { instance } = this;\r\n\r\n      // https://css-tricks.com/snippets/javascript/javascript-keycodes/\r\n      // https://stackoverflow.com/questions/4471582/javascript-keycode-vs-which\r\n      const key =\r\n        \"which\" in evt ? evt.which : /* istanbul ignore next */ evt.keyCode;\r\n\r\n      if (evt.ctrlKey || evt.shiftKey || evt.altKey || evt.metaKey) return;\r\n\r\n      if (\r\n        !instance.menu.isOpen &&\r\n        includes(keysThatRequireMenuBeingOpen, key)\r\n      ) {\r\n        evt.preventDefault();\r\n        return instance.openMenu();\r\n      }\r\n\r\n      switch (key) {\r\n        case KEY_CODES.BACKSPACE: {\r\n          if (instance.backspaceRemoves && !this.value.length) {\r\n            instance.removeLastValue();\r\n          }\r\n          break;\r\n        }\r\n        case KEY_CODES.ENTER: {\r\n          evt.preventDefault();\r\n          if (instance.menu.current === null) return;\r\n          const current = instance.getNode(instance.menu.current);\r\n          if (current.isBranch && instance.disableBranchNodes) return;\r\n          instance.select(current);\r\n          break;\r\n        }\r\n        case KEY_CODES.ESCAPE: {\r\n          if (this.value.length) {\r\n            this.clear();\r\n          } else if (instance.menu.isOpen) {\r\n            instance.closeMenu();\r\n          }\r\n          break;\r\n        }\r\n        case KEY_CODES.END: {\r\n          evt.preventDefault();\r\n          instance.highlightLastOption();\r\n          break;\r\n        }\r\n        case KEY_CODES.HOME: {\r\n          evt.preventDefault();\r\n          instance.highlightFirstOption();\r\n          break;\r\n        }\r\n        case KEY_CODES.ARROW_LEFT: {\r\n          const current = instance.getNode(instance.menu.current);\r\n          if (current.isBranch && instance.shouldExpand(current)) {\r\n            evt.preventDefault();\r\n            instance.toggleExpanded(current);\r\n          } else if (\r\n            !current.isRootNode &&\r\n            (current.isLeaf ||\r\n              (current.isBranch && !instance.shouldExpand(current)))\r\n          ) {\r\n            evt.preventDefault();\r\n            instance.setCurrentHighlightedOption(current.parentNode);\r\n          }\r\n          break;\r\n        }\r\n        case KEY_CODES.ARROW_UP: {\r\n          evt.preventDefault();\r\n          instance.highlightPrevOption();\r\n          break;\r\n        }\r\n        case KEY_CODES.ARROW_RIGHT: {\r\n          const current = instance.getNode(instance.menu.current);\r\n          if (current.isBranch && !instance.shouldExpand(current)) {\r\n            evt.preventDefault();\r\n            instance.toggleExpanded(current);\r\n          }\r\n          break;\r\n        }\r\n        case KEY_CODES.ARROW_DOWN: {\r\n          evt.preventDefault();\r\n          instance.highlightNextOption();\r\n          break;\r\n        }\r\n        case KEY_CODES.DELETE: {\r\n          if (instance.deleteRemoves && !this.value.length) {\r\n            instance.removeLastValue();\r\n          }\r\n          break;\r\n        }\r\n        default: {\r\n          // istanbul ignore else\r\n          instance.openMenu();\r\n        }\r\n      }\r\n    },\r\n\r\n    onMouseDown(evt) {\r\n      // istanbul ignore next\r\n      if (this.value.length) {\r\n        // Prevent it from bubbling to the top level and triggering `preventDefault()`\r\n        // to make the textbox unselectable\r\n        evt.stopPropagation();\r\n      }\r\n    },\r\n\r\n    renderInputContainer() {\r\n      const { instance } = this;\r\n      const props = {};\r\n      const children = [];\r\n\r\n      if (instance.searchable && !instance.disabled) {\r\n        children.push(this.renderInput());\r\n        if (this.needAutoSize) children.push(this.renderSizer());\r\n      }\r\n\r\n      if (!instance.searchable) {\r\n        deepExtend(props, {\r\n          on: {\r\n            focus: this.onFocus,\r\n            blur: this.onBlur,\r\n            keydown: this.onKeyDown,\r\n          },\r\n          ref: \"input\",\r\n        });\r\n      }\r\n\r\n      if (!instance.searchable && !instance.disabled) {\r\n        deepExtend(props, {\r\n          attrs: {\r\n            tabIndex: instance.tabIndex,\r\n          },\r\n        });\r\n      }\r\n\r\n      return (\r\n        <div class=\"vue-treeselect__input-container\" {...props}>\r\n          {children}\r\n        </div>\r\n      );\r\n    },\r\n\r\n    renderInput() {\r\n      const { instance } = this;\r\n      return (\r\n        <input\r\n          ref=\"input\"\r\n          class=\"vue-treeselect__input\"\r\n          type=\"text\"\r\n          autocomplete=\"off\"\r\n          tabIndex={instance.tabIndex}\r\n          required={instance.required && !instance.hasValue}\r\n          value={this.value}\r\n          style={this.inputStyle}\r\n          onFocus={this.onFocus}\r\n          onInput={this.onInput}\r\n          onBlur={this.onBlur}\r\n          onKeydown={this.onKeyDown}\r\n          onMousedown={this.onMouseDown}\r\n        />\r\n      );\r\n    },\r\n\r\n    renderSizer() {\r\n      return (\r\n        <div ref=\"sizer\" class=\"vue-treeselect__sizer\">\r\n          {this.value}\r\n        </div>\r\n      );\r\n    },\r\n\r\n    updateInputWidth() {\r\n      this.inputWidth = Math.max(\r\n        MIN_INPUT_WIDTH,\r\n        this.$refs.sizer.scrollWidth + 15\r\n      );\r\n    },\r\n\r\n    updateSearchQuery() {\r\n      const { instance } = this;\r\n\r\n      instance.trigger.searchQuery = this.value;\r\n    },\r\n  },\r\n\r\n  render() {\r\n    return this.renderInputContainer();\r\n  },\r\n};\r\n</script>","var render, staticRenderFns\nimport script from \"./Input.vue?vue&type=script&lang=js&\"\nexport * from \"./Input.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Proyectos Aito\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('54844eca')) {\n      api.createRecord('54844eca', component.options)\n    } else {\n      api.reload('54844eca', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Input.vue\"\nexport default component.exports","var render, staticRenderFns\nimport script from \"./Placeholder.vue?vue&type=script&lang=js&\"\nexport * from \"./Placeholder.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Proyectos Aito\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('5a99d1f3')) {\n      api.createRecord('5a99d1f3', component.options)\n    } else {\n      api.reload('5a99d1f3', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Placeholder.vue\"\nexport default component.exports","<script>\r\n  export default {\r\n    name: 'vue-treeselect--placeholder',\r\n    inject: [ 'instance' ],\r\n\r\n    render() {\r\n      const { instance } = this\r\n      const placeholderClass = {\r\n        'vue-treeselect__placeholder': true,\r\n        'vue-treeselect-helper-zoom-effect-off': true,\r\n        'vue-treeselect-helper-hide': instance.hasValue || instance.trigger.searchQuery,\r\n      }\r\n\r\n      return (\r\n        <div class={placeholderClass}>\r\n          { instance.placeholder }\r\n        </div>\r\n      )\r\n    },\r\n  }\r\n</script>\r\n","var render, staticRenderFns\nimport script from \"./SingleValue.vue?vue&type=script&lang=js&\"\nexport * from \"./SingleValue.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Proyectos Aito\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('03d19b89')) {\n      api.createRecord('03d19b89', component.options)\n    } else {\n      api.reload('03d19b89', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/SingleValue.vue\"\nexport default component.exports","<script>\r\n  import Input from './Input'\r\n  import Placeholder from './Placeholder'\r\n\r\n  export default {\r\n    name: 'vue-treeselect--single-value',\r\n    inject: [ 'instance' ],\r\n    methods: {\r\n      renderSingleValueLabel() {\r\n        const { instance } = this\r\n        const node = instance.selectedNodes[0]\r\n\r\n        const customValueLabelRenderer = instance.$scopedSlots['value-label']\r\n        return customValueLabelRenderer\r\n          ? customValueLabelRenderer({ node })\r\n          : node.label\r\n      },\r\n    },\r\n    render() {\r\n      const { instance, $parent: { renderValueContainer } } = this\r\n      const shouldShowValue = instance.hasValue && !instance.trigger.searchQuery\r\n\r\n      return renderValueContainer([\r\n        shouldShowValue && (\r\n          <div class=\"vue-treeselect__single-value\">\r\n            { this.renderSingleValueLabel() }\r\n          </div>\r\n        ),\r\n        <Placeholder />,\r\n        <Input ref=\"input\" />,\r\n      ])\r\n    },\r\n  }\r\n</script>\r\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"svg\",\n    {\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 348.333 348.333\"\n      }\n    },\n    [\n      _c(\"path\", {\n        attrs: {\n          d:\n            \"M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z\"\n        }\n      })\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 348.333 348.333\">\r\n    <path d=\"M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z\" />\r\n  </svg>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'vue-treeselect--x',\r\n  }\r\n</script>\r\n","import { render, staticRenderFns } from \"./Delete.vue?vue&type=template&id=364b6320&\"\nimport script from \"./Delete.vue?vue&type=script&lang=js&\"\nexport * from \"./Delete.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Proyectos Aito\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('364b6320')) {\n      api.createRecord('364b6320', component.options)\n    } else {\n      api.reload('364b6320', component.options)\n    }\n    module.hot.accept(\"./Delete.vue?vue&type=template&id=364b6320&\", function () {\n      api.rerender('364b6320', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/icons/Delete.vue\"\nexport default component.exports","var render, staticRenderFns\nimport script from \"./MultiValueItem.vue?vue&type=script&lang=js&\"\nexport * from \"./MultiValueItem.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Proyectos Aito\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6dd6c8ca')) {\n      api.createRecord('6dd6c8ca', component.options)\n    } else {\n      api.reload('6dd6c8ca', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/MultiValueItem.vue\"\nexport default component.exports","<script>\r\n  import { onLeftClick } from '../utils'\r\n  import DeleteIcon from './icons/Delete'\r\n\r\n  export default {\r\n    name: 'vue-treeselect--multi-value-item',\r\n    inject: [ 'instance' ],\r\n\r\n    props: {\r\n      node: {\r\n        type: Object,\r\n        required: true,\r\n      },\r\n    },\r\n\r\n    methods: {\r\n      handleMouseDown: onLeftClick(function handleMouseDown() {\r\n        const { instance, node } = this\r\n\r\n        // Deselect this node.\r\n        instance.select(node)\r\n      }),\r\n    },\r\n\r\n    render() {\r\n      const { instance, node } = this\r\n      const itemClass = {\r\n        'vue-treeselect__multi-value-item': true,\r\n        'vue-treeselect__multi-value-item-disabled': node.isDisabled,\r\n        'vue-treeselect__multi-value-item-new': node.isNew,\r\n      }\r\n      const customValueLabelRenderer = instance.$scopedSlots['value-label']\r\n      const labelRenderer = customValueLabelRenderer ? customValueLabelRenderer({ node }) : node.label\r\n\r\n      return (\r\n        <div class=\"vue-treeselect__multi-value-item-container\">\r\n          <div class={itemClass} onMousedown={this.handleMouseDown}>\r\n            <span class=\"vue-treeselect__multi-value-label\">{ labelRenderer }</span>\r\n            <span class=\"vue-treeselect__icon vue-treeselect__value-remove\"><DeleteIcon /></span>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n  }\r\n</script>\r\n","var render, staticRenderFns\nimport script from \"./MultiValue.vue?vue&type=script&lang=js&\"\nexport * from \"./MultiValue.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Proyectos Aito\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('14fca5e8')) {\n      api.createRecord('14fca5e8', component.options)\n    } else {\n      api.reload('14fca5e8', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/MultiValue.vue\"\nexport default component.exports","<script>\r\n  import MultiValueItem from './MultiValueItem'\r\n  import Input from './Input'\r\n  import Placeholder from './Placeholder'\r\n\r\n  export default {\r\n    name: 'vue-treeselect--multi-value',\r\n    inject: [ 'instance' ],\r\n\r\n    methods: {\r\n      renderMultiValueItems() {\r\n        const { instance } = this\r\n\r\n        return instance.internalValue\r\n          .slice(0, instance.limit)\r\n          .map(instance.getNode)\r\n          .map(node => (\r\n            <MultiValueItem key={`multi-value-item-${node.id}`} node={node} />\r\n          ))\r\n      },\r\n\r\n      renderExceedLimitTip() {\r\n        const { instance } = this\r\n        const count = instance.internalValue.length - instance.limit\r\n\r\n        if (count <= 0) return null\r\n\r\n        return (\r\n          <div class=\"vue-treeselect__limit-tip vue-treeselect-helper-zoom-effect-off\" key=\"exceed-limit-tip\">\r\n            <span class=\"vue-treeselect__limit-tip-text\">{ instance.limitText(count) }</span>\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n\r\n    render() {\r\n      const { renderValueContainer } = this.$parent\r\n      const transitionGroupProps = {\r\n        props: {\r\n          tag: 'div',\r\n          name: 'vue-treeselect__multi-value-item--transition',\r\n          appear: true,\r\n        },\r\n      }\r\n\r\n      return renderValueContainer(\r\n        <transition-group class=\"vue-treeselect__multi-value\" {...transitionGroupProps}>\r\n          {this.renderMultiValueItems()}\r\n          {this.renderExceedLimitTip()}\r\n          <Placeholder key=\"placeholder\" />\r\n          <Input ref=\"input\" key=\"input\" />\r\n        </transition-group>,\r\n      )\r\n    },\r\n  }\r\n</script>\r\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"svg\",\n    {\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 292.362 292.362\"\n      }\n    },\n    [\n      _c(\"path\", {\n        attrs: {\n          d:\n            \"M286.935 69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952 0-9.233 1.807-12.85 5.424C1.807 72.998 0 77.279 0 82.228c0 4.948 1.807 9.229 5.424 12.847l127.907 127.907c3.621 3.617 7.902 5.428 12.85 5.428s9.233-1.811 12.847-5.428L286.935 95.074c3.613-3.617 5.427-7.898 5.427-12.847 0-4.948-1.814-9.229-5.427-12.85z\"\n        }\n      })\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 292.362 292.362\">\r\n    <path d=\"M286.935 69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952 0-9.233 1.807-12.85 5.424C1.807 72.998 0 77.279 0 82.228c0 4.948 1.807 9.229 5.424 12.847l127.907 127.907c3.621 3.617 7.902 5.428 12.85 5.428s9.233-1.811 12.847-5.428L286.935 95.074c3.613-3.617 5.427-7.898 5.427-12.847 0-4.948-1.814-9.229-5.427-12.85z\" />\r\n  </svg>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'vue-treeselect--arrow',\r\n  }\r\n</script>\r\n","import { render, staticRenderFns } from \"./Arrow.vue?vue&type=template&id=11186cd4&\"\nimport script from \"./Arrow.vue?vue&type=script&lang=js&\"\nexport * from \"./Arrow.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Proyectos Aito\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('11186cd4')) {\n      api.createRecord('11186cd4', component.options)\n    } else {\n      api.reload('11186cd4', component.options)\n    }\n    module.hot.accept(\"./Arrow.vue?vue&type=template&id=11186cd4&\", function () {\n      api.rerender('11186cd4', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/icons/Arrow.vue\"\nexport default component.exports","var render, staticRenderFns\nimport script from \"./Control.vue?vue&type=script&lang=js&\"\nexport * from \"./Control.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Proyectos Aito\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2fa0a0dd')) {\n      api.createRecord('2fa0a0dd', component.options)\n    } else {\n      api.reload('2fa0a0dd', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Control.vue\"\nexport default component.exports","<script>\r\n  import { onLeftClick, isPromise } from '../utils'\r\n  import SingleValue from './SingleValue'\r\n  import MultiValue from './MultiValue'\r\n  import DeleteIcon from './icons/Delete'\r\n  import ArrowIcon from './icons/Arrow'\r\n\r\n  export default {\r\n    name: 'vue-treeselect--control',\r\n    inject: [ 'instance' ],\r\n\r\n    computed: {\r\n      /* eslint-disable valid-jsdoc */\r\n      /**\r\n       * Should show the \"×\" button that resets value?\r\n       * @return {boolean}\r\n       */\r\n      shouldShowX() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          instance.clearable &&\r\n          !instance.disabled &&\r\n          instance.hasValue &&\r\n          (this.hasUndisabledValue || instance.allowClearingDisabled)\r\n        )\r\n      },\r\n\r\n      /**\r\n       * Should show the arrow button that toggles menu?\r\n       * @return {boolean}\r\n       */\r\n      shouldShowArrow() {\r\n        const { instance } = this\r\n\r\n        if (!instance.alwaysOpen) return true\r\n        // Even with `alwaysOpen: true`, sometimes the menu is still closed,\r\n        // e.g. when the control is disabled.\r\n        return !instance.menu.isOpen\r\n      },\r\n\r\n      /**\r\n       * Has any undisabled option been selected?\r\n       * @type {boolean}\r\n       */\r\n      hasUndisabledValue() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          instance.hasValue &&\r\n          instance.internalValue.some(id => !instance.getNode(id).isDisabled)\r\n        )\r\n      },\r\n      /* eslint-enable valid-jsdoc */\r\n    },\r\n\r\n    methods: {\r\n      renderX() {\r\n        const { instance } = this\r\n        const title = instance.multiple ? instance.clearAllText : instance.clearValueText\r\n\r\n        if (!this.shouldShowX) return null\r\n\r\n        return (\r\n          <div class=\"vue-treeselect__x-container\" title={title} onMousedown={this.handleMouseDownOnX}>\r\n            <DeleteIcon class=\"vue-treeselect__x\" />\r\n          </div>\r\n        )\r\n      },\r\n\r\n      renderArrow() {\r\n        const { instance } = this\r\n        const arrowClass = {\r\n          'vue-treeselect__control-arrow': true,\r\n          'vue-treeselect__control-arrow--rotated': instance.menu.isOpen,\r\n        }\r\n\r\n        if (!this.shouldShowArrow) return null\r\n\r\n        return (\r\n          <div class=\"vue-treeselect__control-arrow-container\" onMousedown={this.handleMouseDownOnArrow}>\r\n            <ArrowIcon class={arrowClass} />\r\n          </div>\r\n        )\r\n      },\r\n\r\n      handleMouseDownOnX: onLeftClick(function handleMouseDownOnX(evt) {\r\n        /**\r\n         * We don't use async/await here because we don't want\r\n         * to rely on Babel polyfill or regenerator runtime.\r\n         * See: https://babeljs.io/docs/plugins/transform-regenerator/\r\n         * We also don't want to assume there is a global `Promise`\r\n         * class, since we are targeting to support IE9 without the\r\n         * need of any polyfill.\r\n         */\r\n\r\n        evt.stopPropagation()\r\n        evt.preventDefault()\r\n\r\n        const { instance } = this\r\n        const result = instance.beforeClearAll()\r\n        const handler = shouldClear => {\r\n          if (shouldClear) instance.clear()\r\n        }\r\n\r\n        if (isPromise(result)) {\r\n          // The handler will be called async.\r\n          result.then(handler)\r\n        } else {\r\n          // Keep the same behavior here.\r\n          setTimeout(() => handler(result), 0)\r\n          // Also, note that IE9 requires:\r\n          //   setTimeout(() => fn(...args), delay)\r\n          // Instead of:\r\n          //   setTimeout(fn, delay, ...args)\r\n        }\r\n      }),\r\n\r\n      handleMouseDownOnArrow: onLeftClick(function handleMouseDownOnArrow(evt) {\r\n        evt.preventDefault()\r\n        evt.stopPropagation()\r\n\r\n        const { instance } = this\r\n\r\n        // Focus the input or prevent blurring.\r\n        instance.toggleMenu()\r\n        instance.focusInput()\r\n      }),\r\n\r\n      // This is meant to be called by child `<Value />` component.\r\n      renderValueContainer(children) {\r\n        return (\r\n          <div class=\"vue-treeselect__value-container\">\r\n            {children}\r\n          </div>\r\n        )\r\n      },\r\n    },\r\n\r\n    render() {\r\n      const { instance } = this\r\n      const ValueContainer = instance.single ? SingleValue : MultiValue\r\n\r\n      return (\r\n        <div class=\"vue-treeselect__control\" onMousedown={instance.handleMouseDown}>\r\n          <ValueContainer ref=\"value-container\" />\r\n          {this.renderX()}\r\n          {this.renderArrow()}\r\n        </div>\r\n      )\r\n    },\r\n  }\r\n</script>\r\n","var render, staticRenderFns\nimport script from \"./Tip.vue?vue&type=script&lang=js&\"\nexport * from \"./Tip.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Proyectos Aito\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('9f31bdca')) {\n      api.createRecord('9f31bdca', component.options)\n    } else {\n      api.reload('9f31bdca', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Tip.vue\"\nexport default component.exports","<script>\r\n  export default {\r\n    name: 'vue-treeselect--tip',\r\n    functional: true,\r\n\r\n    props: {\r\n      type: {\r\n        type: String,\r\n        required: true,\r\n      },\r\n      icon: {\r\n        type: String,\r\n        required: true,\r\n      },\r\n    },\r\n\r\n    render(_, context) {\r\n      const { props, children } = context\r\n\r\n      return (\r\n        <div class={`vue-treeselect__tip vue-treeselect__${props.type}-tip`}>\r\n          <div class=\"vue-treeselect__icon-container\">\r\n            <span class={`vue-treeselect__icon-${props.icon}`} />\r\n          </div>\r\n          <span class={`vue-treeselect__tip-text vue-treeselect__${props.type}-tip-text`}>\r\n            {children}\r\n          </span>\r\n        </div>\r\n      )\r\n    },\r\n  }\r\n</script>\r\n","<script>\r\n  import { UNCHECKED, INDETERMINATE, CHECKED } from '../constants'\r\n  import { onLeftClick, deepExtend } from '../utils'\r\n  import Tip from './Tip'\r\n  import ArrowIcon from './icons/Arrow'\r\n\r\n  let arrowPlaceholder, checkMark, minusMark\r\n\r\n  const Option = {\r\n    name: 'vue-treeselect--option',\r\n    inject: [ 'instance' ],\r\n\r\n    props: {\r\n      node: {\r\n        type: Object,\r\n        required: true,\r\n      },\r\n    },\r\n\r\n    computed: {\r\n      shouldExpand() {\r\n        const { instance, node } = this\r\n\r\n        return node.isBranch && instance.shouldExpand(node)\r\n      },\r\n\r\n      shouldShow() {\r\n        const { instance, node } = this\r\n\r\n        return instance.shouldShowOptionInMenu(node)\r\n      },\r\n    },\r\n\r\n    methods: {\r\n      renderOption(idParent) {\r\n        const { instance, node } = this\r\n        const optionClass = {\r\n          'vue-treeselect__option clearfix': true,\r\n          'vue-treeselect__option--disabled': node.isDisabled,\r\n          'vue-treeselect__option--selected': instance.isSelected(node),\r\n          'vue-treeselect__option--highlight': node.isHighlighted,\r\n          'vue-treeselect__option--matched': instance.localSearch.active && node.isMatched,\r\n          'vue-treeselect__option--hide': !this.shouldShow,\r\n        }\r\n\r\n        return (\r\n          <div class={optionClass} onMouseenter={this.handleMouseEnterOption} data-id={node.id} aria-label={node.label} tabindex={node.isBranch && instance.disableBranchNodes ? '0' : '-1'} >\r\n            {this.renderArrow()}\r\n            {this.renderLabelContainer([\r\n              this.renderCheckboxContainer([\r\n                this.renderCheckbox(),\r\n              ]),\r\n              this.renderLabel(),\r\n            ])}\r\n          </div>\r\n        )\r\n      },\r\n\r\n      renderSubOptionsList(id) {\r\n        if (!this.shouldExpand) return null\r\n\r\n        return (\r\n          <div id={`${id}-submenu`} class=\"vue-treeselect__list\" role=\"list\" tabindex=\"-1\" >\r\n            {this.renderSubOptions()}\r\n            {this.renderNoChildrenTip()}\r\n            {this.renderLoadingChildrenTip()}\r\n            {this.renderLoadingChildrenErrorTip()}\r\n          </div>\r\n        )\r\n      },\r\n\r\n      onEventListenerOption(evt) {\r\n        if (evt.type === 'keydown' && evt.keyCode === 13) {\r\n          const { instance, node } = this\r\n\r\n          if (node.isBranch && instance.disableBranchNodes) {\r\n            instance.toggleExpanded(node)\r\n          } else {\r\n            instance.select(node)\r\n          }\r\n        }\r\n      },\r\n\r\n      onEventListeners(evt) {\r\n        if (evt.type === 'keydown' && evt.keyCode === 13) {\r\n          const { instance, node } = this\r\n          instance.toggleExpanded(node)\r\n        }\r\n      },\r\n\r\n      renderArrow() {\r\n        const { instance, node } = this\r\n\r\n        if (instance.shouldFlattenOptions && this.shouldShow) return null\r\n\r\n        if (node.isBranch) {\r\n          const transitionProps = {\r\n            props: {\r\n              name: 'vue-treeselect__option-arrow--prepare',\r\n              appear: true,\r\n            },\r\n          }\r\n          const props = {}\r\n\r\n          const arrowClass = {\r\n            'vue-treeselect__option-arrow': true,\r\n            'vue-treeselect__option-arrow--rotated': this.shouldExpand,\r\n          }\r\n\r\n          const styleCaret = { appearance: 'caret' }\r\n\r\n          deepExtend(props, {\r\n            on: {\r\n              keydown: this.onEventListeners,\r\n            },\r\n            ref: 'optionArrow',\r\n          })\r\n\r\n          return (\r\n            <button type=\"button\" class=\"vue-treeselect__option-arrow-container bg-transparent border-0\" style={styleCaret} tabindex={'0'} onMousedown={this.handleMouseDownOnArrow} {...props} aria-controls={`${this.instance.$attrs.id}-arrow`} aria-expanded={ node.isExpanded ? 'true' : 'false'} aria-label=\"Click menu\">\r\n              <transition {...transitionProps}>\r\n                <ArrowIcon class={arrowClass} />\r\n              </transition>\r\n            </button>\r\n          )\r\n        }\r\n\r\n        // For leaf nodes, we render a placeholder to keep its label aligned to\r\n        // branch nodes. Unless there is no branch nodes at all (a normal\r\n        // non-tree select).\r\n        if (/*node.isLeaf && */instance.hasBranchNodes) {\r\n          if (!arrowPlaceholder) arrowPlaceholder = (\r\n            <div class=\"vue-treeselect__option-arrow-placeholder\">&nbsp;</div>\r\n          )\r\n\r\n          return arrowPlaceholder\r\n        }\r\n\r\n        return null\r\n      },\r\n\r\n      renderLabelContainer(children) {\r\n        const node = this.node\r\n        const instance = this.instance\r\n        return (\r\n          <div type=\"button\" class=\"vue-treeselect__label-container\" onMousedown={this.handleMouseDownOnLabelContainer} keydown={this.onEventListenerOption} tabindex={node.isBranch && instance.disableBranchNodes ? '-1' : '0'}>\r\n            {children}\r\n          </div>\r\n        )\r\n      },\r\n\r\n      renderCheckboxContainer(children) {\r\n        const { instance, node } = this\r\n\r\n        if (instance.single) return null\r\n        if (instance.disableBranchNodes && node.isBranch) return null\r\n\r\n        return (\r\n          <div class=\"vue-treeselect__checkbox-container\">\r\n            {children}\r\n          </div>\r\n        )\r\n      },\r\n\r\n      renderCheckbox() {\r\n        const { instance, node } = this\r\n        const checkedState = instance.forest.checkedStateMap[node.id]\r\n        const checkboxClass = {\r\n          'vue-treeselect__checkbox': true,\r\n          'vue-treeselect__checkbox--checked': checkedState === CHECKED,\r\n          'vue-treeselect__checkbox--indeterminate': checkedState === INDETERMINATE,\r\n          'vue-treeselect__checkbox--unchecked': checkedState === UNCHECKED,\r\n          'vue-treeselect__checkbox--disabled': node.isDisabled,\r\n        }\r\n\r\n        if (!checkMark) checkMark = (\r\n          <span class=\"vue-treeselect__check-mark\" />\r\n        )\r\n        if (!minusMark) minusMark = (\r\n          <span class=\"vue-treeselect__minus-mark\" />\r\n        )\r\n\r\n        return (\r\n          <span class={checkboxClass}>\r\n            {checkMark}\r\n            {minusMark}\r\n          </span>\r\n        )\r\n      },\r\n\r\n      renderLabel() {\r\n        const { instance, node } = this\r\n        const shouldShowCount = (\r\n          node.isBranch && (instance.localSearch.active\r\n            ? instance.showCountOnSearchComputed\r\n            : instance.showCount\r\n          )\r\n        )\r\n        const count = shouldShowCount\r\n          ? instance.localSearch.active\r\n            ? instance.localSearch.countMap[node.id][instance.showCountOf]\r\n            : node.count[instance.showCountOf]\r\n          : NaN\r\n        const labelClassName = 'vue-treeselect__label'\r\n        const countClassName = 'vue-treeselect__count'\r\n        const customLabelRenderer = instance.$scopedSlots['option-label']\r\n\r\n        if (customLabelRenderer) return customLabelRenderer({\r\n          node,\r\n          shouldShowCount,\r\n          count,\r\n          labelClassName,\r\n          countClassName,\r\n        })\r\n\r\n        return (\r\n          <label class={labelClassName} tabindex=\"0\" aria-label={node.label}>\r\n            {node.label}\r\n            {shouldShowCount && (\r\n              <span class={countClassName}>({count})</span>\r\n            )}\r\n          </label>\r\n        )\r\n      },\r\n\r\n      renderSubOptions() {\r\n        const { node } = this\r\n\r\n        if (!node.childrenStates.isLoaded) return null\r\n\r\n        return node.children.map(childNode => (\r\n          <Option node={childNode} key={childNode.id} />\r\n        ))\r\n      },\r\n\r\n      renderNoChildrenTip() {\r\n        const { instance, node } = this\r\n\r\n        if (!node.childrenStates.isLoaded || node.children.length) return null\r\n\r\n        return (\r\n          <Tip type=\"no-children\" icon=\"warning\">{ instance.noChildrenText }</Tip>\r\n        )\r\n      },\r\n\r\n      renderLoadingChildrenTip() {\r\n        const { instance, node } = this\r\n\r\n        if (!node.childrenStates.isLoading) return null\r\n\r\n        return (\r\n          <Tip type=\"loading\" icon=\"loader\">{ instance.loadingText }</Tip>\r\n        )\r\n      },\r\n\r\n      renderLoadingChildrenErrorTip() {\r\n        const { instance, node } = this\r\n\r\n        if (!node.childrenStates.loadingError) return null\r\n\r\n        return (\r\n          <Tip type=\"error\" icon=\"error\">\r\n            { node.childrenStates.loadingError }\r\n            <a class=\"vue-treeselect__retry\" title={instance.retryTitle} onMousedown={this.handleMouseDownOnRetry}>\r\n              { instance.retryText }\r\n            </a>\r\n          </Tip>\r\n        )\r\n      },\r\n\r\n      handleMouseEnterOption(evt) {\r\n        const { instance, node } = this\r\n\r\n        // Equivalent to `self` modifier.\r\n        // istanbul ignore next\r\n        if (evt.target !== evt.currentTarget) return\r\n\r\n        instance.setCurrentHighlightedOption(node, false)\r\n      },\r\n\r\n      handleMouseDownOnArrow: onLeftClick(function handleMouseDownOnOptionArrow() {\r\n        const { instance, node } = this\r\n\r\n        instance.toggleExpanded(node)\r\n      }),\r\n\r\n      handleMouseDownOnLabelContainer: onLeftClick(function handleMouseDownOnLabelContainer() {\r\n        const { instance, node } = this\r\n\r\n        if (node.isBranch && instance.disableBranchNodes) {\r\n          instance.toggleExpanded(node)\r\n        } else {\r\n          instance.select(node)\r\n        }\r\n      }),\r\n\r\n      handleMouseDownOnRetry: onLeftClick(function handleMouseDownOnRetry() {\r\n        const { instance, node } = this\r\n\r\n        instance.loadChildrenOptions(node)\r\n      }),\r\n    },\r\n\r\n    render() {\r\n      const { node } = this\r\n      const indentLevel = this.instance.shouldFlattenOptions ? 0 : node.level\r\n      const listItemClass = {\r\n        'vue-treeselect__list-item': true,\r\n        [`vue-treeselect__indent-level-${indentLevel}`]: true,\r\n      }\r\n      const transitionProps = {\r\n        props: {\r\n          name: 'vue-treeselect__list--transition',\r\n        },\r\n      }\r\n\r\n      let isSelected = false\r\n      isSelected = `${this.instance.selectedNodes.some(e => e.id === this.node.id)}`\r\n      // aria-label={node.label}\r\n      return (\r\n        <div\r\n          id={`${node.id}-${node.index.join('-')}`}\r\n          class={listItemClass}\r\n          role=\"listitem\"\r\n          tabindex={node.isBranch && this.instance.disableBranchNodes ? '0' : '-1'}\r\n          aria-selected={isSelected}>\r\n          {this.renderOption(this.node.id)}\r\n          {node.isBranch && (\r\n            <transition {...transitionProps}>\r\n              {this.renderSubOptionsList(this.node.id)}\r\n            </transition>\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n  }\r\n\r\n  // eslint-disable-next-line vue/require-direct-export\r\n  export default Option\r\n</script>\r\n","var render, staticRenderFns\nimport script from \"./Option.vue?vue&type=script&lang=js&\"\nexport * from \"./Option.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Proyectos Aito\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('3dddec25')) {\n      api.createRecord('3dddec25', component.options)\n    } else {\n      api.reload('3dddec25', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Option.vue\"\nexport default component.exports","<script>\r\n  import { MENU_BUFFER } from '../constants'\r\n  import { watchSize, setupResizeAndScrollEventListeners } from '../utils'\r\n  import Option from './Option'\r\n  import Tip from './Tip'\r\n\r\n  const directionMap = {\r\n    top: 'top',\r\n    bottom: 'bottom',\r\n    above: 'top',\r\n    below: 'bottom',\r\n  }\r\n\r\n  export default {\r\n    name: 'vue-treeselect--menu',\r\n    inject: [ 'instance' ],\r\n\r\n    computed: {\r\n      menuStyle() {\r\n        const { instance } = this\r\n\r\n        return {\r\n          maxHeight: instance.maxHeight + 'px',\r\n        }\r\n      },\r\n\r\n      menuContainerStyle() {\r\n        const { instance } = this\r\n\r\n        return {\r\n          zIndex: instance.appendToBody ? null : instance.zIndex,\r\n        }\r\n      },\r\n    },\r\n\r\n    watch: {\r\n      'instance.menu.isOpen'(newValue) {\r\n        if (newValue) {\r\n          // In case `openMenu()` is just called and the menu is not rendered yet.\r\n          this.$nextTick(this.onMenuOpen)\r\n        } else {\r\n          this.onMenuClose()\r\n        }\r\n      },\r\n    },\r\n\r\n    created() {\r\n      this.menuSizeWatcher = null\r\n      this.menuResizeAndScrollEventListeners = null\r\n    },\r\n\r\n    mounted() {\r\n      const { instance } = this\r\n\r\n      if (instance.menu.isOpen) this.$nextTick(this.onMenuOpen)\r\n    },\r\n\r\n    destroyed() {\r\n      this.onMenuClose()\r\n    },\r\n\r\n    methods: {\r\n      renderMenu() {\r\n        const { instance } = this\r\n\r\n        if (!instance.menu.isOpen) return null\r\n\r\n        return (\r\n          <div ref=\"menu\" class=\"vue-treeselect__menu\" onMousedown={instance.handleMouseDown} style={this.menuStyle}>\r\n            {this.renderBeforeList()}\r\n            {instance.async\r\n              ? this.renderAsyncSearchMenuInner()\r\n              : instance.localSearch.active\r\n                ? this.renderLocalSearchMenuInner()\r\n                : this.renderNormalMenuInner()}\r\n            {this.renderAfterList()}\r\n          </div>\r\n        )\r\n      },\r\n\r\n      renderBeforeList() {\r\n        const { instance } = this\r\n        const beforeListRenderer = instance.$scopedSlots['before-list']\r\n\r\n        return beforeListRenderer\r\n          ? beforeListRenderer()\r\n          : null\r\n      },\r\n\r\n      renderAfterList() {\r\n        const { instance } = this\r\n        const afterListRenderer = instance.$scopedSlots['after-list']\r\n\r\n        return afterListRenderer\r\n          ? afterListRenderer()\r\n          : null\r\n      },\r\n\r\n      renderNormalMenuInner() {\r\n        const { instance } = this\r\n\r\n        if (instance.rootOptionsStates.isLoading) {\r\n          return this.renderLoadingOptionsTip()\r\n        } else if (instance.rootOptionsStates.loadingError) {\r\n          return this.renderLoadingRootOptionsErrorTip()\r\n        } else if (instance.rootOptionsStates.isLoaded && instance.forest.normalizedOptions.length === 0) {\r\n          return this.renderNoAvailableOptionsTip()\r\n        } else {\r\n          return this.renderOptionList()\r\n        }\r\n      },\r\n\r\n      renderLocalSearchMenuInner() {\r\n        const { instance } = this\r\n\r\n        if (instance.rootOptionsStates.isLoading) {\r\n          return this.renderLoadingOptionsTip()\r\n        } else if (instance.rootOptionsStates.loadingError) {\r\n          return this.renderLoadingRootOptionsErrorTip()\r\n        } else if (instance.rootOptionsStates.isLoaded && instance.forest.normalizedOptions.length === 0) {\r\n          return this.renderNoAvailableOptionsTip()\r\n        } else if (instance.localSearch.noResults) {\r\n          return this.renderNoResultsTip()\r\n        } else {\r\n          return this.renderOptionList()\r\n        }\r\n      },\r\n\r\n      renderAsyncSearchMenuInner() {\r\n        const { instance } = this\r\n        const entry = instance.getRemoteSearchEntry()\r\n        const shouldShowSearchPromptTip = instance.trigger.searchQuery === '' && !instance.defaultOptions\r\n        const shouldShowNoResultsTip = shouldShowSearchPromptTip\r\n          ? false\r\n          : entry.isLoaded && entry.options.length === 0\r\n\r\n        if (shouldShowSearchPromptTip) {\r\n          return this.renderSearchPromptTip()\r\n        } else if (entry.isLoading) {\r\n          return this.renderLoadingOptionsTip()\r\n        } else if (entry.loadingError) {\r\n          return this.renderAsyncSearchLoadingErrorTip()\r\n        } else if (shouldShowNoResultsTip) {\r\n          return this.renderNoResultsTip()\r\n        } else {\r\n          return this.renderOptionList()\r\n        }\r\n      },\r\n\r\n      renderOptionList() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          <div class=\"vue-treeselect__list\" role=\"list\" tabindex=\"-1\">\r\n            {instance.forest.normalizedOptions.map(rootNode => (\r\n              <Option node={rootNode} key={rootNode.id} />\r\n            ))}\r\n          </div>\r\n        )\r\n      },\r\n\r\n      renderSearchPromptTip() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          <Tip type=\"search-prompt\" icon=\"warning\">{ instance.searchPromptText }</Tip>\r\n        )\r\n      },\r\n\r\n      renderLoadingOptionsTip() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          <Tip type=\"loading\" icon=\"loader\">{ instance.loadingText }</Tip>\r\n        )\r\n      },\r\n\r\n      renderLoadingRootOptionsErrorTip() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          <Tip type=\"error\" icon=\"error\">\r\n            { instance.rootOptionsStates.loadingError }\r\n            <a class=\"vue-treeselect__retry\" onClick={instance.loadRootOptions} title={instance.retryTitle}>\r\n              { instance.retryText }\r\n            </a>\r\n          </Tip>\r\n        )\r\n      },\r\n\r\n      renderAsyncSearchLoadingErrorTip() {\r\n        const { instance } = this\r\n        const entry = instance.getRemoteSearchEntry()\r\n\r\n        // TODO: retryTitle?\r\n\r\n        return (\r\n          <Tip type=\"error\" icon=\"error\">\r\n            { entry.loadingError }\r\n            <a class=\"vue-treeselect__retry\" onClick={instance.handleRemoteSearch} title={instance.retryTitle}>\r\n              { instance.retryText }\r\n            </a>\r\n          </Tip>\r\n        )\r\n      },\r\n\r\n      renderNoAvailableOptionsTip() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          <Tip type=\"no-options\" icon=\"warning\">{ instance.noOptionsText }</Tip>\r\n        )\r\n      },\r\n\r\n      renderNoResultsTip() {\r\n        const { instance } = this\r\n\r\n        return (\r\n          <Tip type=\"no-results\" icon=\"warning\">{ instance.noResultsText }</Tip>\r\n        )\r\n      },\r\n\r\n      onMenuOpen() {\r\n        this.adjustMenuOpenDirection()\r\n        this.setupMenuSizeWatcher()\r\n        this.setupMenuResizeAndScrollEventListeners()\r\n      },\r\n\r\n      onMenuClose() {\r\n        this.removeMenuSizeWatcher()\r\n        this.removeMenuResizeAndScrollEventListeners()\r\n      },\r\n\r\n      adjustMenuOpenDirection() {\r\n        const { instance } = this\r\n        if (!instance.menu.isOpen) return\r\n\r\n        const $menu = instance.getMenu()\r\n        const $control = instance.getControl()\r\n        const menuRect = $menu.getBoundingClientRect()\r\n        const controlRect = $control.getBoundingClientRect()\r\n        const menuHeight = menuRect.height\r\n        const viewportHeight = window.innerHeight\r\n        const spaceAbove = controlRect.top\r\n        const spaceBelow = window.innerHeight - controlRect.bottom\r\n        const isControlInViewport = (\r\n          (controlRect.top >= 0 && controlRect.top <= viewportHeight) ||\r\n          (controlRect.top < 0 && controlRect.bottom > 0)\r\n        )\r\n        const hasEnoughSpaceBelow = spaceBelow > menuHeight + MENU_BUFFER\r\n        const hasEnoughSpaceAbove = spaceAbove > menuHeight + MENU_BUFFER\r\n\r\n        if (!isControlInViewport) {\r\n          instance.closeMenu()\r\n        } else if (instance.openDirection !== 'auto') {\r\n          instance.menu.placement = directionMap[instance.openDirection]\r\n        } else if (hasEnoughSpaceBelow || !hasEnoughSpaceAbove) {\r\n          instance.menu.placement = 'bottom'\r\n        } else {\r\n          instance.menu.placement = 'top'\r\n        }\r\n      },\r\n\r\n      setupMenuSizeWatcher() {\r\n        const { instance } = this\r\n        const $menu = instance.getMenu()\r\n\r\n        // istanbul ignore next\r\n        if (this.menuSizeWatcher) return\r\n\r\n        this.menuSizeWatcher = {\r\n          remove: watchSize($menu, this.adjustMenuOpenDirection),\r\n        }\r\n      },\r\n\r\n      setupMenuResizeAndScrollEventListeners() {\r\n        const { instance } = this\r\n        const $control = instance.getControl()\r\n\r\n        // istanbul ignore next\r\n        if (this.menuResizeAndScrollEventListeners) return\r\n\r\n        this.menuResizeAndScrollEventListeners = {\r\n          remove: setupResizeAndScrollEventListeners($control, this.adjustMenuOpenDirection),\r\n        }\r\n      },\r\n\r\n      removeMenuSizeWatcher() {\r\n        if (!this.menuSizeWatcher) return\r\n\r\n        this.menuSizeWatcher.remove()\r\n        this.menuSizeWatcher = null\r\n      },\r\n\r\n      removeMenuResizeAndScrollEventListeners() {\r\n        if (!this.menuResizeAndScrollEventListeners) return\r\n\r\n        this.menuResizeAndScrollEventListeners.remove()\r\n        this.menuResizeAndScrollEventListeners = null\r\n      },\r\n    },\r\n\r\n    render() {\r\n      return (\r\n        <div ref=\"menu-container\" class=\"vue-treeselect__menu-container\" style={this.menuContainerStyle}>\r\n          <transition name=\"vue-treeselect__menu--transition\">\r\n            {this.renderMenu()}\r\n          </transition>\r\n        </div>\r\n      )\r\n    },\r\n  }\r\n</script>\r\n","var render, staticRenderFns\nimport script from \"./Menu.vue?vue&type=script&lang=js&\"\nexport * from \"./Menu.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Proyectos Aito\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('9bcc0be2')) {\n      api.createRecord('9bcc0be2', component.options)\n    } else {\n      api.reload('9bcc0be2', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Menu.vue\"\nexport default component.exports","<script>\r\n  import Vue from 'vue'\r\n  import { watchSize, setupResizeAndScrollEventListeners, find } from '../utils'\r\n  import Menu from './Menu'\r\n\r\n  const PortalTarget = {\r\n    name: 'vue-treeselect--portal-target',\r\n    inject: [ 'instance' ],\r\n\r\n    watch: {\r\n      'instance.menu.isOpen'(newValue) {\r\n        if (newValue) {\r\n          this.setupHandlers()\r\n        } else {\r\n          this.removeHandlers()\r\n        }\r\n      },\r\n\r\n      'instance.menu.placement'() {\r\n        this.updateMenuContainerOffset()\r\n      },\r\n    },\r\n\r\n    created() {\r\n      this.controlResizeAndScrollEventListeners = null\r\n      this.controlSizeWatcher = null\r\n    },\r\n\r\n    mounted() {\r\n      const { instance } = this\r\n\r\n      if (instance.menu.isOpen) this.setupHandlers()\r\n    },\r\n\r\n    methods: {\r\n      setupHandlers() {\r\n        this.updateWidth()\r\n        this.updateMenuContainerOffset()\r\n        this.setupControlResizeAndScrollEventListeners()\r\n        this.setupControlSizeWatcher()\r\n      },\r\n\r\n      removeHandlers() {\r\n        this.removeControlResizeAndScrollEventListeners()\r\n        this.removeControlSizeWatcher()\r\n      },\r\n\r\n      setupControlResizeAndScrollEventListeners() {\r\n        const { instance } = this\r\n        const $control = instance.getControl()\r\n\r\n        // istanbul ignore next\r\n        if (this.controlResizeAndScrollEventListeners) return\r\n\r\n        this.controlResizeAndScrollEventListeners = {\r\n          remove: setupResizeAndScrollEventListeners($control, this.updateMenuContainerOffset),\r\n        }\r\n      },\r\n\r\n      setupControlSizeWatcher() {\r\n        const { instance } = this\r\n        const $control = instance.getControl()\r\n\r\n        // istanbul ignore next\r\n        if (this.controlSizeWatcher) return\r\n\r\n        this.controlSizeWatcher = {\r\n          remove: watchSize($control, () => {\r\n            this.updateWidth()\r\n            this.updateMenuContainerOffset()\r\n          }),\r\n        }\r\n      },\r\n\r\n      removeControlResizeAndScrollEventListeners() {\r\n        if (!this.controlResizeAndScrollEventListeners) return\r\n\r\n        this.controlResizeAndScrollEventListeners.remove()\r\n        this.controlResizeAndScrollEventListeners = null\r\n      },\r\n\r\n      removeControlSizeWatcher() {\r\n        if (!this.controlSizeWatcher) return\r\n\r\n        this.controlSizeWatcher.remove()\r\n        this.controlSizeWatcher = null\r\n      },\r\n\r\n      updateWidth() {\r\n        const { instance } = this\r\n        const $portalTarget = this.$el\r\n        const $control = instance.getControl()\r\n        const controlRect = $control.getBoundingClientRect()\r\n\r\n        $portalTarget.style.width = controlRect.width + 'px'\r\n      },\r\n\r\n      updateMenuContainerOffset() {\r\n        const { instance } = this\r\n        const $control = instance.getControl()\r\n        const $portalTarget = this.$el\r\n        const controlRect = $control.getBoundingClientRect()\r\n        const portalTargetRect = $portalTarget.getBoundingClientRect()\r\n        const offsetY = instance.menu.placement === 'bottom' ? controlRect.height : 0\r\n        const left = Math.round(controlRect.left - portalTargetRect.left) + 'px'\r\n        const top = Math.round(controlRect.top - portalTargetRect.top + offsetY) + 'px'\r\n        const menuContainerStyle = this.$refs.menu.$refs['menu-container'].style\r\n        const transformVariations = [ 'transform', 'webkitTransform', 'MozTransform', 'msTransform' ]\r\n        const transform = find(transformVariations, t => t in document.body.style)\r\n\r\n        // IE9 doesn't support `translate3d()`.\r\n        menuContainerStyle[transform] = `translate(${left}, ${top})`\r\n      },\r\n    },\r\n\r\n    render() {\r\n      const { instance } = this\r\n      const portalTargetClass = [ 'vue-treeselect__portal-target', instance.wrapperClass ]\r\n      const portalTargetStyle = { zIndex: instance.zIndex }\r\n\r\n      return (\r\n        <div class={portalTargetClass} style={portalTargetStyle} data-instance-id={instance.getInstanceId()}>\r\n          <Menu ref=\"menu\" />\r\n        </div>\r\n      )\r\n    },\r\n\r\n    destroyed() {\r\n      this.removeHandlers()\r\n    },\r\n  }\r\n\r\n  let placeholder\r\n\r\n  export default {\r\n    name: 'vue-treeselect--menu-portal',\r\n\r\n    created() {\r\n      this.portalTarget = null\r\n    },\r\n\r\n    mounted() {\r\n      this.setup()\r\n    },\r\n\r\n    destroyed() {\r\n      this.teardown()\r\n    },\r\n\r\n    methods: {\r\n      setup() {\r\n        const el = document.createElement('div')\r\n        document.body.appendChild(el)\r\n\r\n        this.portalTarget = new Vue({\r\n          el,\r\n          parent: this,\r\n          ...PortalTarget,\r\n        })\r\n      },\r\n\r\n      teardown() {\r\n        document.body.removeChild(this.portalTarget.$el)\r\n        this.portalTarget.$el.innerHTML = ''\r\n\r\n        this.portalTarget.$destroy()\r\n        this.portalTarget = null\r\n      },\r\n    },\r\n\r\n    render() {\r\n      if (!placeholder) placeholder = (\r\n        <div class=\"vue-treeselect__menu-placeholder\" />\r\n      )\r\n\r\n      return placeholder\r\n    },\r\n  }\r\n</script>\r\n","var render, staticRenderFns\nimport script from \"./MenuPortal.vue?vue&type=script&lang=js&\"\nexport * from \"./MenuPortal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Proyectos Aito\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4802d94a')) {\n      api.createRecord('4802d94a', component.options)\n    } else {\n      api.reload('4802d94a', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/MenuPortal.vue\"\nexport default component.exports","var render, staticRenderFns\nimport script from \"./Treeselect.vue?vue&type=script&lang=js&\"\nexport * from \"./Treeselect.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Proyectos Aito\\\\vue-treeselect\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('aebf116c')) {\n      api.createRecord('aebf116c', component.options)\n    } else {\n      api.reload('aebf116c', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/components/Treeselect.vue\"\nexport default component.exports","<script>\r\n  import treeselectMixin from '../mixins/treeselectMixin'\r\n  import HiddenFields from './HiddenFields'\r\n  import Control from './Control'\r\n  import Menu from './Menu'\r\n  import MenuPortal from './MenuPortal'\r\n\r\n  export default {\r\n    name: 'vue-treeselect',\r\n    mixins: [ treeselectMixin ],\r\n\r\n    computed: {\r\n      wrapperClass() {\r\n        return {\r\n          'vue-treeselect': true,\r\n          'vue-treeselect--single': this.single,\r\n          'vue-treeselect--multi': this.multiple,\r\n          'vue-treeselect--searchable': this.searchable,\r\n          'vue-treeselect--disabled': this.disabled,\r\n          'vue-treeselect--focused': this.trigger.isFocused,\r\n          'vue-treeselect--has-value': this.hasValue,\r\n          'vue-treeselect--open': this.menu.isOpen,\r\n          'vue-treeselect--open-above': this.menu.placement === 'top',\r\n          'vue-treeselect--open-below': this.menu.placement === 'bottom',\r\n          'vue-treeselect--branch-nodes-disabled': this.disableBranchNodes,\r\n          'vue-treeselect--append-to-body': this.appendToBody,\r\n        }\r\n      },\r\n    },\r\n\r\n    render() {\r\n      return (\r\n        <div ref=\"wrapper\" class={this.wrapperClass}>\r\n          <HiddenFields />\r\n          <Control ref=\"control\" />\r\n          {this.appendToBody ? <MenuPortal ref=\"portal\" /> : <Menu ref=\"menu\" />}\r\n        </div>\r\n      )\r\n    },\r\n  }\r\n</script>\r\n","import Treeselect from './components/Treeselect'\r\nimport treeselectMixin from './mixins/treeselectMixin'\r\nimport './style.less'\r\n\r\nexport default Treeselect\r\nexport { Treeselect, treeselectMixin }\r\nexport {\r\n  // Delayed loading.\r\n  LOAD_ROOT_OPTIONS,\r\n  LOAD_CHILDREN_OPTIONS,\r\n  ASYNC_SEARCH,\r\n} from './constants'\r\n\r\nexport const VERSION = PKG_VERSION\r\n"],"sourceRoot":""}